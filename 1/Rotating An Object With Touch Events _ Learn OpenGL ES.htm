<!DOCTYPE html>
<html lang="en-US" class="no-js">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="http://gmpg.org/xfn/11">
		<link rel="pingback" href="http://www.learnopengles.com/wordpress/xmlrpc.php">
		<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>
<title>Rotating An Object With Touch Events | Learn OpenGL ES</title>

<!-- All in One SEO Pack 2.4.2 by Michael Torbert of Semper Fi Web Design[406,473] -->
<meta name="description"  content="Rotating an object in 3D is a neat way of letting your users interact with the scene, but the math can be tricky to get right. In this article, I&#039;ll take a look" />

<meta name="keywords"  content="rotation" />

<link rel="canonical" href="http://www.learnopengles.com/rotating-an-object-with-touch-events/" />
<!-- /all in one seo pack -->
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Learn OpenGL ES &raquo; Feed" href="http://www.learnopengles.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn OpenGL ES &raquo; Comments Feed" href="http://www.learnopengles.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn OpenGL ES &raquo; Rotating An Object With Touch Events Comments Feed" href="http://www.learnopengles.com/rotating-an-object-with-touch-events/feed/" />
<!-- This site uses the Google Analytics by MonsterInsights plugin v6.2.4 - Using Analytics tracking - https://www.monsterinsights.com/ -->
<script type="text/javascript" data-cfasync="false">
		var disableStr = 'ga-disable-UA-23646705-1';

	/* Function to detect opted out users */
	function __gaTrackerIsOptedOut() {
		return document.cookie.indexOf(disableStr + '=true') > -1;
	}

	/* Disable tracking if the opt-out cookie exists. */
	if ( __gaTrackerIsOptedOut() ) {
		window[disableStr] = true;
	}

	/* Opt-out function */
	function __gaTrackerOptout() {
	  document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
	  window[disableStr] = true;
	}
		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','__gaTracker');

	__gaTracker('create', 'UA-23646705-1', 'auto');
	__gaTracker('set', 'forceSSL', true);
	__gaTracker('send','pageview');
</script>
<!-- / Google Analytics by MonsterInsights -->
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.learnopengles.com\/wordpress\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.5"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='twentysixteen-fonts-css'  href='https://fonts.googleapis.com/css?family=Merriweather%3A400%2C700%2C900%2C400italic%2C700italic%2C900italic%7CMontserrat%3A400%2C700%7CInconsolata%3A400&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/genericons/genericons.css?ver=3.4.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentysixteen-style-css'  href='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen-child/style.css?ver=4.8.5' type='text/css' media='all' />
<!--[if lt IE 10]>
<link rel='stylesheet' id='twentysixteen-ie-css'  href='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/css/ie.css?ver=20160816' type='text/css' media='all' />
<![endif]-->
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentysixteen-ie8-css'  href='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/css/ie8.css?ver=20160816' type='text/css' media='all' />
<![endif]-->
<!--[if lt IE 8]>
<link rel='stylesheet' id='twentysixteen-ie7-css'  href='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/css/ie7.css?ver=20160816' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='A2A_SHARE_SAVE-css'  href='http://www.learnopengles.com/wordpress/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.14' type='text/css' media='all' />
<script type='text/javascript'>
/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","is_debug_mode":"false","download_extensions":"doc,exe,js,pdf,ppt,tgz,zip,xls","inbound_paths":"","home_url":"http:\/\/www.learnopengles.com","track_download_as":"event","internal_label":"int","hash_tracking":"false"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/google-analytics-for-wordpress/assets/js/frontend.min.js?ver=6.2.4'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/add-to-any/addtoany.min.js?ver=1.0'></script>
<!--[if lt IE 9]>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/js/html5.js?ver=3.7.3'></script>
<![endif]-->
<link rel='https://api.w.org/' href='http://www.learnopengles.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learnopengles.com/wordpress/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learnopengles.com/wordpress/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Listening to Android Touch Events, and Acting on Them' href='http://www.learnopengles.com/listening-to-android-touch-events-and-acting-on-them/' />
<link rel='next' title='Android Lesson Seven: An Introduction to Vertex Buffer Objects (VBOs)' href='http://www.learnopengles.com/android-lesson-seven-an-introduction-to-vertex-buffer-objects-vbos/' />
<meta name="generator" content="WordPress 4.8.5" />
<link rel='shortlink' href='http://www.learnopengles.com/?p=812' />
<link rel="alternate" type="application/json+oembed" href="http://www.learnopengles.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.learnopengles.com%2Frotating-an-object-with-touch-events%2F" />
<link rel="alternate" type="text/xml+oembed" href="http://www.learnopengles.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.learnopengles.com%2Frotating-an-object-with-touch-events%2F&#038;format=xml" />

<script type="text/javascript">
var a2a_config=a2a_config||{};a2a_config.callbacks=a2a_config.callbacks||[];a2a_config.templates=a2a_config.templates||{};
var a2a_config = a2a_config || {};
a2a_config.templates = {
    twitter: "Reading: ${title} ${link} by @LearnOpenGLES"
};
</script>
<script type="text/javascript" src="https://static.addtoany.com/menu/page.js" async="async"></script>
<script type="text/javascript" src="http://www.learnopengles.com/wordpress/wp-content/plugins/si-captcha-for-wordpress/captcha/si_captcha.js?ver=1516146293"></script>
<!-- begin SI CAPTCHA Anti-Spam - login/register form style -->
<style type="text/css">
.si_captcha_small { width:175px; height:45px; padding-top:10px; padding-bottom:10px; }
.si_captcha_large { width:250px; height:60px; padding-top:10px; padding-bottom:10px; }
img#si_image_com { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_reg { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_log { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_side_login { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_checkout { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_jetpack { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_bbpress_topic { border-style:none; margin:0; padding-right:5px; float:left; }
.si_captcha_refresh { border-style:none; margin:0; vertical-align:bottom; }
div#si_captcha_input { display:block; padding-top:15px; padding-bottom:5px; }
label#si_captcha_code_label { margin:0; }
input#si_captcha_code_input { width:65px; }
p#si_captcha_code_p { clear: left; padding-top:10px; }
.si-captcha-jetpack-error { color:#DC3232; }
</style>
<!-- end SI CAPTCHA Anti-Spam - login/register form style -->
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>
<style type="text/css" id="syntaxhighlighteranchor"></style>

<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/wp-spamshield/js/jscripts.php'></script> 
</head>

<body class="post-template-default single single-post postid-812 single-format-standard custom-background">
<div id="page" class="site">
	<div class="site-inner">
		<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

		<header id="masthead" class="site-header" role="banner">
			<div class="site-header-main">
				<div class="site-branding">
					
											<p class="site-title"><a href="http://www.learnopengles.com/" rel="home">Learn OpenGL ES</a></p>
											<p class="site-description">Learn how to develop mobile graphics using OpenGL ES 2</p>
									</div><!-- .site-branding -->

							</div><!-- .site-header-main -->

					</header><!-- .site-header -->

		<div id="content" class="site-content">

<div id="primary" class="content-area">
	<main id="main" class="site-main" role="main">
		
<article id="post-812" class="post-812 post type-post status-publish format-standard hentry category-android category-articles category-webgl tag-rotation">
	<header class="entry-header">
		<h1 class="entry-title">Rotating An Object With Touch Events</h1>	</header><!-- .entry-header -->

	
	
	<div class="entry-content">
		<p>Rotating an object in 3D is a neat way of letting your users interact with the scene, but the math can be tricky to get right. In this article, I&#8217;ll take a look at a simple way to rotate an object based on the touch events, and how to work around the main drawback of this method.</p>
<h4>Simple rotations.</h4>
<p>This is the easiest way to rotate an object based on touch movement. Here is example pseudocode:</p>
<pre class="brush: cpp; title: ; notranslate" title="">Matrix.setIdentity(modelMatrix);

... do other translations here ...

Matrix.rotateX(totalYMovement);
Matrix.rotateY(totalXMovement);</pre>
<p>This is done every frame.</p>
<p>To rotate an object up or down, we rotate it around the X-axis, and to rotate an object left or right, we rotate it around the Y axis. We could also rotate an object around the Z axis if we wanted it to spin around.</p>
<h4>How to make the rotation appear relative to the user&#8217;s point of view.</h4>
<p>The main problem with the simple way of rotating is that the object is being rotated in relation to itself, instead of in relation to the user&#8217;s point of view. If you rotate left and right from a point of zero rotation, the cube will rotate as you expect, but what if you then rotate it up or down 180 degrees? Trying to rotate the cube left or right will now rotate it in the opposite direction!</p>
<p>One easy way to work around this problem is to keep a second matrix around that will store all of the accumulated rotations.</p>
<p>Here&#8217;s what we need to do:</p>
<ol>
<li>Every frame, calculate the delta between the <em>last</em> position of the pointer, and the <em>current</em> position of the pointer. This delta will be used to rotate our accumulated rotation matrix.</li>
<li>Use this matrix to rotate the cube.</li>
</ol>
<p>What this means is that drags left, right, up, and down will always move the cube in the direction that we expect.</p>
<h5>Android Code</h5>
<p>The code examples here are written for Android, but can easily be adapted to any platform running OpenGL ES. The code is based on <a href="http://www.learnopengles.com/android-lesson-six-an-introduction-to-texture-filtering/">Android Lesson Six: An Introduction to Texture Filtering</a>.</p>
<p>In LessonSixGLSurfaceView.java, we declare a few member variables:</p>
<pre class="brush: java; title: ; notranslate" title="">private float mPreviousX;
private float mPreviousY;

private float mDensity;</pre>
<p>We will store the previous pointer position each frame, so that we can calculate the relative movement left, right, up, or down. We also store the screen density so that drags across the screen can move the object a consistent amount across devices, regardless of the pixel density.</p>
<p>Here&#8217;s how to get the pixel density:</p>
<pre class="brush: java; title: ; notranslate" title="">final DisplayMetrics displayMetrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
density = displayMetrics.density</pre>
<p>Then we add our touch event handler to our custom GLSurfaceView:</p>
<pre class="brush: java; title: ; notranslate" title="">public boolean onTouchEvent(MotionEvent event)
{
	if (event != null)
	{
		float x = event.getX();
		float y = event.getY();

		if (event.getAction() == MotionEvent.ACTION_MOVE)
		{
			if (mRenderer != null)
			{
				float deltaX = (x - mPreviousX) / mDensity / 2f;
				float deltaY = (y - mPreviousY) / mDensity / 2f;

				mRenderer.mDeltaX += deltaX;
				mRenderer.mDeltaY += deltaY;
			}
		}

		mPreviousX = x;
		mPreviousY = y;

		return true;
	}
	else
	{
		return super.onTouchEvent(event);
	}
}</pre>
<p>Every frame, we compare the current pointer position with the previous, and use that to calculate the delta offset. We then divide that delta offset by the pixel density and a slowing factor of 2.0f to get our final delta values. We apply those directly to the renderer to a couple of public variables that we have also declared as <em>volatile</em>, so that they can be updated between threads.</p>
<p>Remember, on Android, the OpenGL renderer runs in a different thread than the UI event handler thread, and there is a slim chance that the other thread fires in-between the X and Y variable assignments (there are also additional points of contention with the += syntax). I have left the code like this to bring up this point; as an exercise for the reader I leave it to you to add synchronized statements around the public variable read and write pairs instead of using volatile variables.</p>
<p>First, let&#8217;s add a couple of matrices and initialize them:</p>
<pre class="brush: java; title: ; notranslate" title="">/** Store the accumulated rotation. */
private final float[] mAccumulatedRotation = new float[16];

/** Store the current rotation. */
private final float[] mCurrentRotation = new float[16];</pre>
<pre class="brush: java; title: ; notranslate" title="">@Override
public void onSurfaceCreated(GL10 glUnused, EGLConfig config)
{

    ...

    // Initialize the accumulated rotation matrix
     Matrix.setIdentityM(mAccumulatedRotation, 0);
}</pre>
<p>Here&#8217;s what our matrix code looks like in the onDrawFrame method:</p>
<pre class="brush: java; title: ; notranslate" title="">// Draw a cube.
// Translate the cube into the screen.
Matrix.setIdentityM(mModelMatrix, 0);
Matrix.translateM(mModelMatrix, 0, 0.0f, 0.8f, -3.5f);

// Set a matrix that contains the current rotation.
Matrix.setIdentityM(mCurrentRotation, 0);
Matrix.rotateM(mCurrentRotation, 0, mDeltaX, 0.0f, 1.0f, 0.0f);
Matrix.rotateM(mCurrentRotation, 0, mDeltaY, 1.0f, 0.0f, 0.0f);
mDeltaX = 0.0f;
mDeltaY = 0.0f;

// Multiply the current rotation by the accumulated rotation, and then set the accumulated
// rotation to the result.
Matrix.multiplyMM(mTemporaryMatrix, 0, mCurrentRotation, 0, mAccumulatedRotation, 0);
System.arraycopy(mTemporaryMatrix, 0, mAccumulatedRotation, 0, 16);

// Rotate the cube taking the overall rotation into account.
Matrix.multiplyMM(mTemporaryMatrix, 0, mModelMatrix, 0, mAccumulatedRotation, 0);
System.arraycopy(mTemporaryMatrix, 0, mModelMatrix, 0, 16);</pre>
<ol>
<li>First we translate the cube.</li>
<li>Then we build a matrix that will contain the current amount of rotation, between this frame and the preceding frame.</li>
<li>We then multiply this matrix with the accumulated rotation, and assign the accumulated rotation to the result. The accumulated rotation contains the result of all of our rotations since the beginning.</li>
<li>Now that we&#8217;ve updated the accumulated rotation matrix with the most recent rotation, we finally rotate the cube by multiplying the model matrix with our rotation matrix, and then we set the model matrix to the result.</li>
</ol>
<p>The above code might look a bit confusion due to the placement of the variables, so remember the definitions:</p>
<p><strong>public static void multiplyMM (float[] result, int resultOffset, float[] lhs, int lhsOffset, float[] rhs, int rhsOffset)</strong></p>
<p><strong>public static void arraycopy (Object src, int srcPos, Object dst, int dstPos, int length)</strong></p>
<p>Note the position of source and destination for each method call.</p>
<h5>Trouble spots and pitfalls</h5>
<ul>
<li>The accumulated matrix should be set to identity once when initialized, and should <em>not</em> be reset to identity each frame.</li>
<li>Previous pointer positions must also be set on pointer down events, not only on pointer move events.</li>
<li>Watch the order of parameters, and also watch out for corrupting your matrices. Android&#8217;s Matrix.multiplyMM states that &#8220;the result element values are undefined if the result elements overlap either the lhs or rhs elements.&#8221; Use temporary matrices to avoid this problem.</li>
</ul>
<h5>WebGL examples</h5>
<p>The example on the left uses the simplest method of rotating, while the example on the right uses the accumulated rotations matrix.</p>
<table style="margin-left: auto; margin-right: auto;">
<tbody>
<tr>
<td><canvas id="firstCanvas" width="375" height="375">Your browser does not support the canvas tag.</canvas></td>
<td><canvas id="canvas" width="375" height="375">Your browser does not support the canvas tag.</canvas></td>
</tr>
</tbody>
</table>
<h5>Further exercises</h5>
<p>What are the drawbacks of using a matrix to hold accumulated rotations and updating it every frame based on the movement delta for that frame? What other ways of rotation are there? Try experimenting, and see what else you can come up with!<br />
<!-- Script data --></p>
<pre><!-- WebGL utils originally from here: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/common/webgl-utils.js --><script type="text/javascript" src="http://www.learnopengles.com/wordpress/wp-content/uploads/2011/06/webgl-utils.js"></script><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: x-small;"><span style="line-height: 19px; white-space: normal;"> <!-- glMatrix utils originally from here: http://code.google.com/p/glmatrix/source/browse/glMatrix.js --><script type="text/javascript" src="http://www.learnopengles.com/wordpress/wp-content/uploads/2011/06/glMatrix.js"></script><span> <!-- Shader programs --><script id="vertex_shader" type="text/javascript">// <![CDATA[
uniform mat4 u_MVPMatrix;      		// A constant representing the combined model/view/projection matrix.
uniform mat4 u_MVMatrix;       		// A constant representing the combined model/view matrix.

attribute vec4 a_Position;     		// Per-vertex position information we will pass in.
attribute vec4 a_Color;        		// Per-vertex color information we will pass in.
attribute vec3 a_Normal;       		// Per-vertex normal information we will pass in.

varying vec3 v_Position;       		// This will be passed into the fragment shader.
varying vec4 v_Color;          		// This will be passed into the fragment shader.
varying vec3 v_Normal;         		// This will be passed into the fragment shader.

// The entry point for our vertex shader.  
void main()                                                 	
{                                                          
	// Transform the vertex into eye space.
    v_Position = vec3(u_MVMatrix * a_Position);             

	// Pass through the color.    
    v_Color = a_Color; 

	// Transform the normal's orientation into eye space.
    v_Normal = vec3(u_MVMatrix * vec4(a_Normal, 0.0));      

	// gl_Position is a special variable used to store the final position.
	// Multiply the vertex by the matrix to get the final point in normalized screen coordinates.
    gl_Position = u_MVPMatrix * a_Position;                       		  
} 
// ]]&gt;</script><script id="fragment_shader" type="text/javascript">// <![CDATA[
precision mediump float;       		// Set the default precision to medium. We don't need as high of a 
									// precision in the fragment shader.
uniform vec3 u_LightPos;       	    // The position of the light in eye space.

varying vec3 v_Position;			// Interpolated position for this fragment.
varying vec4 v_Color;          		// This is the color from the vertex shader interpolated across the 
									// triangle per fragment.
varying vec3 v_Normal;         		// Interpolated normal for this fragment.

// The entry point for our fragment shader.
void main()                    		
{                              
	// Will be used for attenuation.
    float distance = length(u_LightPos - v_Position);                  

	// Get a lighting direction vector from the light to the vertex.
    vec3 lightVector = normalize(u_LightPos - v_Position);

	// Calculate the dot product of the light vector and vertex normal. If the normal and light vector are
	// pointing in the same direction then it will get max illumination.
    float diffuse = max(dot(v_Normal, lightVector), 0.3);               	  		  													  

	// Add attenuation. 
    diffuse = diffuse * (1.0 / (1.0 + (0.25 * distance * distance)));  

	// Multiply the color by the diffuse illumination level to get final output color.
    gl_FragColor = v_Color * diffuse;                                  		
}                                                                     	
// ]]&gt;</script><script type="text/javascript">// <![CDATA[
function runWebGlProgram(canvasIdString, rotationMode) {
/**
 * Lesson_two.js
 */

// We make use of the WebGL utility library, which was downloaded from here:
// https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/common/webgl-utils.js
//
// It defines two functions which we use here:
//
// // Creates a WebGL context.
// WebGLUtils.setupWebGL(canvas);
//
// // Requests an animation callback. See: https://developer.mozilla.org/en/DOM/window.requestAnimationFrame
// window.requestAnimFrame(callback, node);
//
// We also make use of the glMatrix file which can be downloaded from here:
// http://code.google.com/p/glmatrix/source/browse/glMatrix.js
//

/** Hold a reference to the WebGLContext */
var gl = null;		   

/** Hold a reference to the canvas DOM object. */
var canvas = null;	 

/** Used for moving the cube. */
var deltaX = 0;
var deltaY = 0;

/**
 * Store the model matrix. This matrix is used to move models from object space (where each model can be thought
 * of being located at the center of the universe) to world space.
 */
var modelMatrix = mat4.create();

/**
 * Store the view matrix. This can be thought of as our camera. This matrix transforms world space to eye space;
 * it positions things relative to our eye.
 */
var viewMatrix = mat4.create();

/** Store the projection matrix. This is used to project the scene onto a 2D viewport. */
var projectionMatrix = mat4.create();

/** Allocate storage for the final combined matrix. This will be passed into the shader program. */
var mvpMatrix = mat4.create();

/** For rotations by the user. */
var currentRotationMatrix = mat4.create();
var accumulatedRotationMatrix = mat4.create();
mat4.identity(accumulatedRotationMatrix);

/** 
 * Stores a copy of the model matrix specifically for the light position.
 */
var lightModelMatrix = mat4.create();

/** Store our model data in a Float32Array buffer. */
var cubePositions;
var cubeColors;
var cubeNormals;

/** Store references to the vertex buffer objects (VBOs) that will be created. */
var cubePositionBufferObject;
var cubeColorBufferObject;
var cubeNormalBufferObject;

/** This will be used to pass in the transformation matrix. */
var mvpMatrixHandle;

/** This will be used to pass in the modelview matrix. */
var mvMatrixHandle;

/** This will be used to pass in the light position. */
var lightPosHandle;

/** This will be used to pass in model position information. */
var positionHandle;

/** This will be used to pass in model color information. */
var colorHandle;

/** This will be used to pass in model normal information. */
var normalHandle;

/** Size of the position data in elements. */
var positionDataSize = 3;

/** Size of the color data in elements. */
var colorDataSize = 4;	

/** Size of the normal data in elements. */
var normalDataSize = 3;

/** Used to hold a light centered on the origin in model space. We need a 4th coordinate so we can get translations to work when
 *  we multiply this by our transformation matrices. */
var lightPosInModelSpace = new Array(0, 0, 0, 1);

/** Used to hold the current position of the light in world space (after transformation via model matrix). */
var lightPosInWorldSpace = new Array(0, 0, 0, 0);

/** Used to hold the transformed position of the light in eye space (after transformation via modelview matrix) */
var lightPosInEyeSpace = new Array(0, 0, 0, 0);

/** This is a handle to our per-vertex cube shading program. */
var perVertexProgramHandle;

// Helper function to load a shader
function loadShader(sourceScriptId, type)
{
	var shaderHandle = gl.createShader(type);
	var error;

	if (shaderHandle != 0) 
	{				
		// Read the embedded shader from the document.
		var shaderSource = document.getElementById(sourceScriptId);

		if (!shaderSource)
		{
			throw("Error: shader script '" + sourceScriptId + "' not found");
		}

		// Pass in the shader source.
		gl.shaderSource(shaderHandle, shaderSource.text);		

		// Compile the shader.
		gl.compileShader(shaderHandle);

		// Get the compilation status.		
		var compiled = gl.getShaderParameter(shaderHandle, gl.COMPILE_STATUS);		

		// If the compilation failed, delete the shader.
		if (!compiled) 
		{				
			error = gl.getShaderInfoLog(shaderHandle);			
			gl.deleteShader(shaderHandle);
			shaderHandle = 0;
		}
	}

	if (shaderHandle == 0)
	{
		throw("Error creating shader " + sourceScriptId + ": " + error);
	}

	return shaderHandle;
}

// Helper function to link a program
function linkProgram(vertexShader, fragmentShader, attributes)
{
	// Create a program object and store the handle to it.
	var programHandle = gl.createProgram();
	var error;

	if (programHandle != 0) 
	{
		// Bind the vertex shader to the program.
		gl.attachShader(programHandle, vertexShader);			

		// Bind the fragment shader to the program.
		gl.attachShader(programHandle, fragmentShader);

		// Bind attributes
		if (attributes)
		{
			for (i = 0; i < attributes.length; i++)
			{
				gl.bindAttribLocation(programHandle, i, attributes[i]);
			}
		}

		// Link the two shaders together into a program.
		gl.linkProgram(programHandle);

		// Get the link status.
		var linked = gl.getProgramParameter(programHandle, gl.LINK_STATUS);

		// If the link failed, delete the program.
		if (!linked) 
		{	
			error = gl.getProgramInfoLog(programHandle);			
			gl.deleteProgram(programHandle);
			programHandle = 0;
		}
	}

	if (programHandle == 0)
	{
		throw("Error creating program:" + error);
	}

	return programHandle;
}

// Called when we have the context
function startRendering()
{
	/* Configure viewport */

	// Set the OpenGL viewport to the same size as the canvas.
	gl.viewport(0, 0, canvas.clientWidth, canvas.clientHeight);

	// Create a new perspective projection matrix. The height will stay the same
	// while the width will vary as per aspect ratio.
	var ratio = canvas.clientWidth / canvas.clientHeight;
	var left = -ratio;
	var right = ratio;
	var bottom = -1.0;
	var top = 1.0;
	var near = 1.0;
	var far = 10.0;

	mat4.frustum(left, right, bottom, top, near, far, projectionMatrix);

	/* Configure general parameters */

	// Set the background clear color to black.
	gl.clearColor(0.0, 0.0, 0.0, 0.0);	

	// Use culling to remove back faces.
	gl.enable(gl.CULL_FACE);

	// Enable depth testing
	gl.enable(gl.DEPTH_TEST);

	// Enable dithering
	gl.enable(gl.DITHER);

	/* Configure camera */
	// Position the eye behind the origin.
	var eyeX = 0.0;
	var eyeY = 0.0;
	var eyeZ = -0.5;

	// We are looking toward the distance
	var lookX = 0.0;
	var lookY = 0.0;
	var lookZ = -5.0;

	// Set our up vector. This is where our head would be pointing were we holding the camera.
	var upX = 0.0;
	var upY = 1.0;
	var upZ = 0.0;

	// Set the view matrix. This matrix can be said to represent the camera position.		
	var eye = vec3.create();
	eye[0] = eyeX; eye[1] = eyeY; eye[2] = eyeZ;

	var center = vec3.create();
	center[0] = lookX; center[1] = lookY; center[2] = lookZ;

	var up = vec3.create();
	up[0] = upX; up[1] = upY; up[2] = upZ;

	mat4.lookAt(eye, center, up, viewMatrix);

	/* Configure shaders */

	var vertexShaderHandle = loadShader("vertex_shader", gl.VERTEX_SHADER);
	var fragmentShaderHandle = loadShader("fragment_shader", gl.FRAGMENT_SHADER);			

	// Create a program object and store the handle to it.
	perVertexProgramHandle = linkProgram(vertexShaderHandle, fragmentShaderHandle, new Array("a_Position",  "a_Color", "a_Normal"));

    // Create buffers in OpenGL's working memory.				
	cubePositionBufferObject = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, cubePositionBufferObject);
    gl.bufferData(gl.ARRAY_BUFFER, cubePositions, gl.STATIC_DRAW);

    cubeColorBufferObject = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, cubeColorBufferObject);
    gl.bufferData(gl.ARRAY_BUFFER, cubeColors, gl.STATIC_DRAW);

    cubeNormalBufferObject = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, cubeNormalBufferObject);
    gl.bufferData(gl.ARRAY_BUFFER, cubeNormals, gl.STATIC_DRAW);        

	// Tell the browser we want render() to be called whenever it's time to draw another frame.
	window.requestAnimFrame(render, canvas);
}

// Callback called each time the browser wants us to draw another frame
function render(time)
{           	
	// Clear the canvas
	gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

	// Do a complete rotation every 10 seconds.
    var time = Date.now() % 10000;
    var angleInDegrees = (360.0 / 10000.0) * time;
    var angleInRadians = angleInDegrees / 57.2957795;

    // Set our per-vertex lighting program.
    gl.useProgram(perVertexProgramHandle);    

    // Set program handles for cube drawing.
    mvpMatrixHandle = gl.getUniformLocation(perVertexProgramHandle, "u_MVPMatrix");
    mvMatrixHandle = gl.getUniformLocation(perVertexProgramHandle, "u_MVMatrix"); 
    lightPosHandle = gl.getUniformLocation(perVertexProgramHandle, "u_LightPos");
    positionHandle = gl.getAttribLocation(perVertexProgramHandle, "a_Position");
    colorHandle = gl.getAttribLocation(perVertexProgramHandle, "a_Color");
    normalHandle = gl.getAttribLocation(perVertexProgramHandle, "a_Normal"); 

    var v = vec3.create();

    // Calculate position of the light. Rotate and then push into the distance.    
    mat4.identity(lightModelMatrix);
    v[0] = 0; v[1] = 0; v[2] = -5;
    mat4.translate(lightModelMatrix, v);

    v[0] = 0; v[1] = 0; v[2] = 2;
    mat4.translate(lightModelMatrix, v);

    mat4.multiplyVec4(lightModelMatrix, lightPosInModelSpace, lightPosInWorldSpace);
    mat4.multiplyVec4(viewMatrix, lightPosInWorldSpace, lightPosInEyeSpace);                                             

    // Draw a cubes.                      
    mat4.identity(modelMatrix);
    v[0] = 0; v[1] = 0; v[2] = -5;
    mat4.translate(modelMatrix, v);    

    if (rotationMode == 1) 
    {    
        mat4.rotateX(modelMatrix, deltaY / 100);
        mat4.rotateY(modelMatrix, deltaX / 100);
    } 
    else
    {
        mat4.identity(currentRotationMatrix);
        mat4.rotateX(currentRotationMatrix, deltaY / 100);
        mat4.rotateY(currentRotationMatrix, deltaX / 100);
        deltaX = 0;
        deltaY = 0;

        mat4.multiply(currentRotationMatrix, accumulatedRotationMatrix, accumulatedRotationMatrix);
        mat4.multiply(modelMatrix, accumulatedRotationMatrix);
    }

    drawCube();               

    // Send the commands to WebGL
	gl.flush();

	// Request another frame
	window.requestAnimFrame(render, canvas);
}

/**
 * Draws a cube.
 */			
function drawCube()
{		
	// Pass in the position information
	gl.enableVertexAttribArray(positionHandle);   
	gl.bindBuffer(gl.ARRAY_BUFFER, cubePositionBufferObject);
    gl.vertexAttribPointer(positionHandle, positionDataSize, gl.FLOAT, false, 0, 0);  

    // Pass in the color information
    gl.enableVertexAttribArray(colorHandle);   
    gl.bindBuffer(gl.ARRAY_BUFFER, cubeColorBufferObject);
    gl.vertexAttribPointer(colorHandle, colorDataSize, gl.FLOAT, false, 0, 0); 

    // Pass in the normal information
    gl.enableVertexAttribArray(normalHandle);   
    gl.bindBuffer(gl.ARRAY_BUFFER, cubeNormalBufferObject);
    gl.vertexAttribPointer(normalHandle, normalDataSize, gl.FLOAT, false, 0, 0);

	// This multiplies the view matrix by the model matrix, and stores the result in the MVP matrix
    // (which currently contains model * view).
    mat4.multiply(viewMatrix, modelMatrix, mvpMatrix);      

    // Pass in the modelview matrix.
    gl.uniformMatrix4fv(mvMatrixHandle, false, mvpMatrix);                

    // This multiplies the modelview matrix by the projection matrix, and stores the result in the MVP matrix
    // (which now contains model * view * projection).
    mat4.multiply(projectionMatrix, mvpMatrix, mvpMatrix);    

    // Pass in the combined matrix.
    gl.uniformMatrix4fv(mvpMatrixHandle, false, mvpMatrix);

    // Pass in the light position in eye space.        
    gl.uniform3f(lightPosHandle, lightPosInEyeSpace[0], lightPosInEyeSpace[1], lightPosInEyeSpace[2]);

    // Draw the cube.
    gl.drawArrays(gl.TRIANGLES, 0, 36);    
}

// Main entry point
function main()
{		
    // Try to get a WebGL context    
    canvas = document.getElementById(canvasIdString);    

    // We don't need alpha blending.
    // See https://www.khronos.org/registry/webgl/specs/1.0/ Section 5.2 for more info on parameters and defaults.
    gl = WebGLUtils.setupWebGL(canvas, {alpha: false});

    if (gl != null)
	{    	
    	// // Define points for a cube.		

		// X, Y, Z
		cubePositions = new Float32Array
		([
				// In OpenGL counter-clockwise winding is default. This means that when we look at a triangle, 
				// if the points are counter-clockwise we are looking at the "front". If not we are looking at
				// the back. OpenGL has an optimization where all back-facing triangles are culled, since they
				// usually represent the backside of an object and aren't visible anyways.

				// Front face
				-1.0, 1.0, 1.0,				
				-1.0, -1.0, 1.0,
				1.0, 1.0, 1.0, 
				-1.0, -1.0, 1.0, 				
				1.0, -1.0, 1.0,
				1.0, 1.0, 1.0,

				// Right face
				1.0, 1.0, 1.0,				
				1.0, -1.0, 1.0,
				1.0, 1.0, -1.0,
				1.0, -1.0, 1.0,				
				1.0, -1.0, -1.0,
				1.0, 1.0, -1.0,

				// Back face
				1.0, 1.0, -1.0,				
				1.0, -1.0, -1.0,
				-1.0, 1.0, -1.0,
				1.0, -1.0, -1.0,				
				-1.0, -1.0, -1.0,
				-1.0, 1.0, -1.0,

				// Left face
				-1.0, 1.0, -1.0,				
				-1.0, -1.0, -1.0,
				-1.0, 1.0, 1.0, 
				-1.0, -1.0, -1.0,				
				-1.0, -1.0, 1.0, 
				-1.0, 1.0, 1.0, 

				// Top face
				-1.0, 1.0, -1.0,				
				-1.0, 1.0, 1.0, 
				1.0, 1.0, -1.0, 
				-1.0, 1.0, 1.0, 				
				1.0, 1.0, 1.0, 
				1.0, 1.0, -1.0,

				// Bottom face
				1.0, -1.0, -1.0,				
				1.0, -1.0, 1.0, 
				-1.0, -1.0, -1.0,
				1.0, -1.0, 1.0, 				
				-1.0, -1.0, 1.0,
				-1.0, -1.0, -1.0
		]);	

		// R, G, B, A
		cubeColors = new Float32Array
		([				
				// Front face (red)
				1.0, 0.0, 0.0, 1.0,				
				1.0, 0.0, 0.0, 1.0,
				1.0, 0.0, 0.0, 1.0,
				1.0, 0.0, 0.0, 1.0,				
				1.0, 0.0, 0.0, 1.0,
				1.0, 0.0, 0.0, 1.0,

				// Right face (green)
				0.0, 1.0, 0.0, 1.0,				
				0.0, 1.0, 0.0, 1.0,
				0.0, 1.0, 0.0, 1.0,
				0.0, 1.0, 0.0, 1.0,				
				0.0, 1.0, 0.0, 1.0,
				0.0, 1.0, 0.0, 1.0,

				// Back face (blue)
				0.0, 0.0, 1.0, 1.0,				
				0.0, 0.0, 1.0, 1.0,
				0.0, 0.0, 1.0, 1.0,
				0.0, 0.0, 1.0, 1.0,				
				0.0, 0.0, 1.0, 1.0,
				0.0, 0.0, 1.0, 1.0,

				// Left face (yellow)
				1.0, 1.0, 0.0, 1.0,				
				1.0, 1.0, 0.0, 1.0,
				1.0, 1.0, 0.0, 1.0,
				1.0, 1.0, 0.0, 1.0,				
				1.0, 1.0, 0.0, 1.0,
				1.0, 1.0, 0.0, 1.0,

				// Top face (cyan)
				0.0, 1.0, 1.0, 1.0,				
				0.0, 1.0, 1.0, 1.0,
				0.0, 1.0, 1.0, 1.0,
				0.0, 1.0, 1.0, 1.0,				
				0.0, 1.0, 1.0, 1.0,
				0.0, 1.0, 1.0, 1.0,

				// Bottom face (magenta)
				1.0, 0.0, 1.0, 1.0,				
				1.0, 0.0, 1.0, 1.0,
				1.0, 0.0, 1.0, 1.0,
				1.0, 0.0, 1.0, 1.0,				
				1.0, 0.0, 1.0, 1.0,
				1.0, 0.0, 1.0, 1.0
		]);

		// X, Y, Z
		// The normal is used in light calculations and is a vector which points
		// orthogonal to the plane of the surface. For a cube model, the normals
		// should be orthogonal to the points of each face.
		cubeNormals = new Float32Array
		([												
				// Front face
				0.0, 0.0, 1.0,				
				0.0, 0.0, 1.0,
				0.0, 0.0, 1.0,
				0.0, 0.0, 1.0,				
				0.0, 0.0, 1.0,
				0.0, 0.0, 1.0,

				// Right face 
				1.0, 0.0, 0.0,				
				1.0, 0.0, 0.0,
				1.0, 0.0, 0.0,
				1.0, 0.0, 0.0,				
				1.0, 0.0, 0.0,
				1.0, 0.0, 0.0,

				// Back face 
				0.0, 0.0, -1.0,				
				0.0, 0.0, -1.0,
				0.0, 0.0, -1.0,
				0.0, 0.0, -1.0,				
				0.0, 0.0, -1.0,
				0.0, 0.0, -1.0,

				// Left face 
				-1.0, 0.0, 0.0,				
				-1.0, 0.0, 0.0,
				-1.0, 0.0, 0.0,
				-1.0, 0.0, 0.0,				
				-1.0, 0.0, 0.0,
				-1.0, 0.0, 0.0,

				// Top face 
				0.0, 1.0, 0.0,			
				0.0, 1.0, 0.0,
				0.0, 1.0, 0.0,
				0.0, 1.0, 0.0,				
				0.0, 1.0, 0.0,
				0.0, 1.0, 0.0,

				// Bottom face 
				0.0, -1.0, 0.0,			
				0.0, -1.0, 0.0,
				0.0, -1.0, 0.0,
				0.0, -1.0, 0.0,				
				0.0, -1.0, 0.0,
				0.0, -1.0, 0.0
		]);    	    	

    	startRendering();
	}
}

// Execute the main entry point
main();

// Add click handlers
var mouseIsDown = false;
var previousX;
var previousY;

canvas.addEventListener("mousedown", function(e) 
{ 
    mouseIsDown = true; 
    previousX = e.screenX; 
    previousY = e.screenY;
});

document.addEventListener("mouseup", function(e) { mouseIsDown = false; });

document.addEventListener("mousemove", function(e) 
{     
    if (mouseIsDown) {
        deltaX += e.screenX - previousX;
        deltaY += e.screenY - previousY; 
    }

    previousX = e.screenX; 
    previousY = e.screenY;
});
}

runWebGlProgram("canvas", 2);
runWebGlProgram("firstCanvas", 1);
// ]]&gt;</script></span></span></span></pre>

<div style="padding: 15px 15px 0 15px; margin: 0 0 0 0; border: 1px solid #e6e6e6; background: #fafafa; border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px;">
        <iframe border="0px" height="182px" seamless="true" scrolling="no" src="http://pragprog.com/products/buy_now_insert/kbogla" width="155px" style="float: left; margin: 0 15px 5px 0; padding: 0; border: none;">Buy Now</iframe>
    <div>
		<h4 style="display: inline;">About the book</h4>
    	<div style="margin-top: 0.7em;"><p>Android is booming like never before, with millions of devices shipping every day. In <em><a href="http://pragprog.com/book/kbogla/opengl-es-2-for-android">OpenGL ES 2 for Android: A Quick-Start Guide</a></em>, you’ll learn all about shaders and the OpenGL pipeline, and discover the power of OpenGL ES 2.0, which is much more feature-rich than its predecessor.</p><p>It’s never been a better time to learn how to create your own 3D games and live wallpapers. If you can program in Java and you have a creative vision that you’d like to share with the world, then this is the book for you.</div>
	</div>
</div><div class="addtoany_share_save_container addtoany_content_bottom"><div class="a2a_kit a2a_kit_size_32 addtoany_list" data-a2a-url="http://www.learnopengles.com/rotating-an-object-with-touch-events/" data-a2a-title="Rotating An Object With Touch Events"><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share"><img src="https://static.addtoany.com/buttons/share_save_256_24.png" alt="Share"></a></div></div>
<div class="author-info">
	<div class="author-avatar">
		<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />	</div><!-- .author-avatar -->

	<div class="author-description">
		<h2 class="author-title"><span class="author-heading">Author:</span> Admin</h2>

		<p class="author-bio">
			Kevin is the author of <a href="http://pragprog.com/book/kbogla/opengl-es-2-for-android">OpenGL ES 2 for Android: A Quick-Start Guide</a>. He also has extensive experience in Android development.			<a class="author-link" href="http://www.learnopengles.com/author/oes_admin/" rel="author">
				View all posts by Admin			</a>
		</p><!-- .author-bio -->
	</div><!-- .author-description -->
</div><!-- .author-info -->
	</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="byline"><span class="author vcard"><img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=49&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=98&amp;d=identicon&amp;r=g 2x' class='avatar avatar-49 photo' height='49' width='49' /><span class="screen-reader-text">Author </span> <a class="url fn n" href="http://www.learnopengles.com/author/oes_admin/">Admin</a></span></span><span class="posted-on"><span class="screen-reader-text">Posted on </span><a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/" rel="bookmark"><time class="entry-date published" datetime="2012-02-27T08:00:40+00:00">February 27, 2012</time><time class="updated" datetime="2012-04-16T13:55:30+00:00">April 16, 2012</time></a></span><span class="cat-links"><span class="screen-reader-text">Categories </span><a href="http://www.learnopengles.com/category/android/" rel="category tag">Android</a>, <a href="http://www.learnopengles.com/category/articles/" rel="category tag">Articles</a>, <a href="http://www.learnopengles.com/category/webgl/" rel="category tag">WebGL</a></span><span class="tags-links"><span class="screen-reader-text">Tags </span><a href="http://www.learnopengles.com/tag/rotation/" rel="tag">rotation</a></span>			</footer><!-- .entry-footer -->
</article><!-- #post-## -->

<div id="comments" class="comments-area">

			<h2 class="comments-title">
			56 thoughts on &ldquo;Rotating An Object With Touch Events&rdquo;		</h2>

		
		<ol class="comment-list">
					<li id="comment-761" class="pingback even thread-even depth-1">
			<div class="comment-body">
				Pingback: <a href='http://www.learnopengles.com/android-lesson-six-an-introduction-to-texture-filtering/' rel='external nofollow' class='url'>Android Lesson Six: An Introduction to Texture Filtering | Learn OpenGL ES</a> 			</div>
</li><!-- #comment-## -->
		<li id="comment-907" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-907" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/45d81d1b69215194b394a86e24a5f0ae?s=42&#038;d=identicon&#038;r=g' srcset='http://1.gravatar.com/avatar/45d81d1b69215194b394a86e24a5f0ae?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Frank</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-907">
							<time datetime="2012-04-13T13:48:31+00:00">
								April 13, 2012 at 1:48 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Very nice tutorial. I&#8217;m currently trying to adapt the code for the &#8220;global&#8221; rotation but I&#8217;m using OpenGL ES 1.0 and it doesn&#8217;t seem to work. Do you have any idea how the matrix code would look in OpenGL ES 1.0? The reason I&#8217;m not using OpenGL ES 2.0 is that I have an object loader for OpenGL ES 1.0.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=907#respond' onclick='return addComment.moveForm( "div-comment-907", "907", "respond", "812" )' aria-label='Reply to Frank'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-908" class="comment byuser comment-author-oes_admin bypostauthor even depth-2">
			<article id="div-comment-908" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-908">
							<time datetime="2012-04-13T15:18:58+00:00">
								April 13, 2012 at 3:18 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Frank,</p>
<p>I haven&#8217;t played with OpenGL ES 1.0 matrix stuff in a while, so I&#8217;m curious! </p>
<p>I imagine the code might look something like this:</p>
<p>// Draw a cube.<br />
// Translate the cube into the screen.<br />
glLoadIdentity(GL_MODELVIEW_MATRIX)<br />
glTranslatef(0.0f, 0.8f, -3.5f);</p>
<p>// Set a matrix that contains the current rotation.<br />
Matrix.setIdentityM(mCurrentRotation, 0);<br />
Matrix.rotateM(mCurrentRotation, 0, mDeltaX, 0.0f, 1.0f, 0.0f);<br />
Matrix.rotateM(mCurrentRotation, 0, mDeltaY, 1.0f, 0.0f, 0.0f);<br />
mDeltaX = 0.0f;<br />
mDeltaY = 0.0f;</p>
<p>// Multiply the current rotation by the accumulated rotation, and then set the accumulated<br />
// rotation to the result.<br />
Matrix.multiplyMM(mTemporaryMatrix, 0, mCurrentRotation, 0, mAccumulatedRotation, 0);<br />
System.arraycopy(mTemporaryMatrix, 0, mAccumulatedRotation, 0, 16);</p>
<p>// Rotate the cube taking the overall rotation into account.<br />
glMultMatrix(mAccumulatedRotation, 0);</p>
<p>Since the matrices used by android.opengl.Matrix are in column-major order, and the matrices used by OpenGL are also in column major order, this seems like it should work. Let me know!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=908#respond' onclick='return addComment.moveForm( "div-comment-908", "908", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-912" class="comment odd alt thread-even depth-1 parent">
			<article id="div-comment-912" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/45d81d1b69215194b394a86e24a5f0ae?s=42&#038;d=identicon&#038;r=g' srcset='http://1.gravatar.com/avatar/45d81d1b69215194b394a86e24a5f0ae?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Frank</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-912">
							<time datetime="2012-04-15T11:09:40+00:00">
								April 15, 2012 at 11:09 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I wasn&#8217;t expecting such a quick reply. I only had time today to test it. It works:</p>
<p>gl.glMatrixMode(GL10.GL_MODELVIEW);<br />
gl.glLoadIdentity();<br />
gl.glTranslatef(0, 0, -3.0f);</p>
<p>Matrix.setIdentityM(mCurrentRotation, 0);<br />
Matrix.rotateM(mCurrentRotation, 0, mAngleX, 0.0f, 1.0f, 0.0f);<br />
Matrix.rotateM(mCurrentRotation, 0, mAngleY, 1.0f, 0.0f, 0.0f);<br />
mAngleX=0.0f;<br />
mAngleY=0.0f;</p>
<p>Matrix.multiplyMM(mTemporaryMatrix, 0, mCurrentRotation, 0, mAccumulatedRotation, 0);<br />
System.arraycopy(mTemporaryMatrix, 0, mAccumulatedRotation, 0, 16);</p>
<p>// Rotate the cube taking the overall rotation into account.<br />
gl.glMultMatrixf(mAccumulatedRotation, 0);  </p>
<p>My problem was that I didn&#8217;t initialize the accumulation rotation matrix in the OnSurfaceCreated method so it wasn&#8217;t diplaying anything. Thanks a lot for your input.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=912#respond' onclick='return addComment.moveForm( "div-comment-912", "912", "respond", "812" )' aria-label='Reply to Frank'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-917" class="comment byuser comment-author-oes_admin bypostauthor even depth-2">
			<article id="div-comment-917" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-917">
							<time datetime="2012-04-16T13:56:06+00:00">
								April 16, 2012 at 1:56 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Excellent point, Frank, I&#8217;ve updated the article to include the initialization step as well, as others might run into the same issue. Thanks for letting me know! 🙂</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=917#respond' onclick='return addComment.moveForm( "div-comment-917", "917", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-923" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-923" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://0.gravatar.com/avatar/311f56d334d26ca3a9c3dd6ea719c924?s=42&#038;d=identicon&#038;r=g' srcset='http://0.gravatar.com/avatar/311f56d334d26ca3a9c3dd6ea719c924?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">kostas</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-923">
							<time datetime="2012-04-19T10:59:21+00:00">
								April 19, 2012 at 10:59 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>First of all I must say that this is a very nice tutorial even for a beginner on OpenGL like me.</p>
<p>What I would like to ask is how I could change the location of an object (e.g. a triangle on lesson one). I have implement the onTouchEvent method on the GLSurfaceView class and I have added a .translateM call to the onDrawFrame of the renderer, but I cannot figure out how to translate the values of getX() and getY() to the values needed by the .translateM method.</p>
<p>Thank you in advance for your time.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=923#respond' onclick='return addComment.moveForm( "div-comment-923", "923", "respond", "812" )' aria-label='Reply to kostas'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-926" class="comment byuser comment-author-oes_admin bypostauthor even depth-2 parent">
			<article id="div-comment-926" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-926">
							<time datetime="2012-04-20T15:56:25+00:00">
								April 20, 2012 at 3:56 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Kostas,</p>
<p>I haven&#8217;t tried that myself, but I think you will need to use this method:</p>
<p>gluUnProject(float winX, float winY, float winZ, float[] model, int modelOffset, float[] project, int projectOffset, int[] view, int viewOffset, float[] obj, int objOffset)<br />
Map window coordinates to object coordinates.</p>
<p>This will help you reconvert your touch coordinates back into your object coordinates, which should give you the right X and Y values to use for translation. Let me know if this helps.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=926#respond' onclick='return addComment.moveForm( "div-comment-926", "926", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-927" class="comment byuser comment-author-oes_admin bypostauthor odd alt depth-3 parent">
			<article id="div-comment-927" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-927">
							<time datetime="2012-04-20T15:57:40+00:00">
								April 20, 2012 at 3:57 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>The method can be found in the GLU class; here&#8217;s the doc on the parameters:</p>
<p>Map window coordinates to object coordinates. gluUnProject maps the specified window coordinates into object coordinates using model, proj, and view. The result is stored in obj.<br />
Note that you can use the OES_matrix_get extension, if present, to get the current modelView and projection matrices.<br />
Parameters</p>
<p>winX	window coordinates X<br />
winY	window coordinates Y<br />
winZ	window coordinates Z<br />
model	the current modelview matrix<br />
modelOffset	the offset into the model array where the modelview maxtrix data starts.<br />
project	the current projection matrix<br />
projectOffset	the offset into the project array where the project matrix data starts.<br />
view	the current view, {x, y, width, height}<br />
viewOffset	the offset into the view array where the view vector data starts.<br />
obj	the output vector {objX, objY, objZ}, that returns the computed object coordinates.<br />
objOffset	the offset into the obj array where the obj vector data starts.<br />
Returns</p>
<p>A return value of GL10.GL_TRUE indicates success, a return value of GL10.GL_FALSE indicates failure.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=927#respond' onclick='return addComment.moveForm( "div-comment-927", "927", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-928" class="comment byuser comment-author-oes_admin bypostauthor even depth-4">
			<article id="div-comment-928" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-928">
							<time datetime="2012-04-20T15:58:21+00:00">
								April 20, 2012 at 3:58 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Since we&#8217;re using OpenGL ES 2.0, you already have the matrix buffers handy. You can just pass them as-is into the method.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=928#respond' onclick='return addComment.moveForm( "div-comment-928", "928", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1031" class="comment odd alt thread-even depth-1">
			<article id="div-comment-1031" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Juan</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1031">
							<time datetime="2012-05-23T07:11:50+00:00">
								May 23, 2012 at 7:11 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I&#8217;m working on the same issue for an iOS app with the vuforia SDK.<br />
Can anybody help me figure out how to implement this in their ImageTargets sample?</p>
<p>The rendering part goes like this:</p>
<p>modelViewMatrix = QCAR::Tool::convertPose2GLMatrix(trackable-&gt;getPose());</p>
<p>            ShaderUtils::scalePoseMatrix(kBowlScale, kBowlScale, kBowlScale,&amp;modelViewMatrix.data[0]);<br />
            //ShaderUtils::rotatePoseMatrix(floatAngleY, 0.0f, 0.0f, 1.0f, &amp;modelViewMatrix.data[0]);<br />
            ShaderUtils::rotatePoseMatrix(floatAngleY, 0.0f, 1.0f, 0.0f, &amp;modelViewMatrix.data[0]);<br />
            ShaderUtils::rotatePoseMatrix(floatAngleX, 1.0f, 0.0f, 0.0f, &amp;modelViewMatrix.data[0]);<br />
            ShaderUtils::multiplyMatrix(&amp;qUtils.projectionMatrix.data[0], &amp;modelViewMatrix.data[0], &amp;modelViewProjection.data[0]);</p>
<p>            glVertexAttribPointer(vertexHandle, 3, GL_FLOAT, GL_FALSE, 0, (const GLvoid*) &amp;objectVertices[0]);<br />
            glVertexAttribPointer(normalHandle, 3, GL_FLOAT, GL_FALSE, 0, (const GLvoid*) &amp;objectNormals[0]);<br />
            glVertexAttribPointer(textureCoordHandle, 2, GL_FLOAT, GL_FALSE, 0, (const GLvoid*) &amp;objectTexCoords[0]);</p>
<p>            glBindTexture(GL_TEXTURE_2D, [[textures objectAtIndex:2] textureID]);<br />
            glUniformMatrix4fv(mvpMatrixHandle, 1, GL_FALSE, (GLfloat*)&amp;modelViewProjection.data[0] );<br />
            //glDrawElements(GL_TRIANGLES, NUM_OBJECT_INDEX, GL_UNSIGNED_SHORT, (const GLvoid*) &amp;objectIndices[0]);</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1031#respond' onclick='return addComment.moveForm( "div-comment-1031", "1031", "respond", "812" )' aria-label='Reply to Juan'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1247" class="comment even thread-odd thread-alt depth-1 parent">
			<article id="div-comment-1247" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Juan</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1247">
							<time datetime="2012-08-19T04:43:55+00:00">
								August 19, 2012 at 4:43 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for the help!<br />
It worked flawlessly! Until I had 3 cubes stacked&#8230;they all seem to rotate through their center. Do you know how I can avoid this? Thanks!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1247#respond' onclick='return addComment.moveForm( "div-comment-1247", "1247", "respond", "812" )' aria-label='Reply to Juan'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1249" class="comment odd alt depth-2 parent">
			<article id="div-comment-1249" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/7410fb701a359a4cdf6900f4276b211e?s=42&#038;d=identicon&#038;r=g' srcset='http://1.gravatar.com/avatar/7410fb701a359a4cdf6900f4276b211e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Martin</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1249">
							<time datetime="2012-08-19T18:46:28+00:00">
								August 19, 2012 at 6:46 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>It&#8217;s probably a small issue. A cube is not rotating for fun. mModelMatrix perhaps rotate  around the variable angleInDegrees, you have forgotten to delete while copying and pasting;).<br />
If you&#8217;re still using Ios, I&#8217;ll remind you that there are OS specific differences in touch recognization.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1249#respond' onclick='return addComment.moveForm( "div-comment-1249", "1249", "respond", "812" )' aria-label='Reply to Martin'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1250" class="comment byuser comment-author-oes_admin bypostauthor even depth-3 parent">
			<article id="div-comment-1250" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1250">
							<time datetime="2012-08-21T01:57:34+00:00">
								August 21, 2012 at 1:57 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>You might want to try flipping the order of translate/rotate just before you draw those 3 cubes.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1250#respond' onclick='return addComment.moveForm( "div-comment-1250", "1250", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1252" class="comment odd alt depth-4 parent">
			<article id="div-comment-1252" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/8cb4cabcdd32fe2e5715de96d4dacdbc?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Juan</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1252">
							<time datetime="2012-08-21T02:24:22+00:00">
								August 21, 2012 at 2:24 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for answering so fast!<br />
Don&#8217;t worry about me using iOS, I&#8217;ve changed everything I needed to change for it to work. Not only that, I&#8217;m working with Vuforia and OpenGL ES 2.0.<br />
I&#8217;ve managed to work this out by -as suggested- changing the order of the operations.<br />
Since translation and scaling were being applied to the modelview matrix and the rotation was being applied to another matrix, it was just a matter of translating and scaling AFTER the rotation matrix was multiplied with the modelview one.<br />
Now everything works as it should!<br />
Thanks every.body for the help, and I hope others reading this answer might find it helpful.</p>
<p>Best<br />
Juan<br />
PS: i promise to come back every now and then in case something interesting shows up!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1252#respond' onclick='return addComment.moveForm( "div-comment-1252", "1252", "respond", "812" )' aria-label='Reply to Juan'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1253" class="comment byuser comment-author-oes_admin bypostauthor even depth-5">
			<article id="div-comment-1253" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1253">
							<time datetime="2012-08-23T13:56:31+00:00">
								August 23, 2012 at 1:56 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Nice, glad it worked. 🙂</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1312" class="comment odd alt thread-even depth-1 parent">
			<article id="div-comment-1312" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/e2786daedfc9202b11dbc68c7735194a?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/e2786daedfc9202b11dbc68c7735194a?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Depankar</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1312">
							<time datetime="2012-10-12T21:35:12+00:00">
								October 12, 2012 at 9:35 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I am using opengles 1.0 and have made a spinning cube but that&#8217;s an application ,how to make it a live wallpaper tell me the changes that i need to make in manifest file and renderer file(if any)<br />
thanks</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1312#respond' onclick='return addComment.moveForm( "div-comment-1312", "1312", "respond", "812" )' aria-label='Reply to Depankar'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1322" class="comment byuser comment-author-oes_admin bypostauthor even depth-2">
			<article id="div-comment-1322" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1322">
							<time datetime="2012-10-26T20:58:43+00:00">
								October 26, 2012 at 8:58 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Check out this post: <a href="http://www.learnopengles.com/how-to-use-opengl-es-2-in-an-android-live-wallpaper/" rel="nofollow">http://www.learnopengles.com/how-to-use-opengl-es-2-in-an-android-live-wallpaper/</a> 🙂</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1322#respond' onclick='return addComment.moveForm( "div-comment-1322", "1322", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1329" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-1329" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">saranya</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1329">
							<time datetime="2012-11-17T13:26:03+00:00">
								November 17, 2012 at 1:26 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi,<br />
I want to rotate my cube on touch event.I don&#8217;t know how it possible.Is it done in renderer class.I don&#8217;t know.Sorry</p>
<p>public void onDrawFrame(GL10 gl) {<br />
      // Clear color and depth buffers<br />
      gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);</p>
<p>      // &#8212;&#8211; Render the Cube &#8212;&#8211;<br />
      gl.glLoadIdentity();                  // Reset the model-view matrix<br />
      gl.glTranslatef(-0.5f, -2.5f, 2.0f);<br />
      gl.glScalef(0.1f, 0.1f, 0.1f);    // Translate into the screen<br />
      gl.glRotatef(angleCube, 0.15f, 1.0f, 0.3f); // Rotate<br />
      cube.draw(gl);</p>
<p>      // Update the rotational angle after each refresh.<br />
      angleCube += speedCube;<br />
   }</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1329#respond' onclick='return addComment.moveForm( "div-comment-1329", "1329", "respond", "812" )' aria-label='Reply to saranya'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1334" class="comment byuser comment-author-oes_admin bypostauthor even depth-2">
			<article id="div-comment-1334" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1334">
							<time datetime="2012-11-20T02:53:29+00:00">
								November 20, 2012 at 2:53 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>You mean like to keep it spinning? I know the NeHe guys do that in their tutorials, you could check out how they do it here: <a href="http://nehe.gamedev.net/tutorial/lessons_06__10/17010/" rel="nofollow">http://nehe.gamedev.net/tutorial/lessons_06__10/17010/</a></p>
<p>They do work with keyboard though so it&#8217;s a bit different. Your pseudo-code seems like it would work &#8212; maybe you can take this sample and try capturing the delta between the previous touch and the current touch, and use that as a &#8220;speed&#8221; to increment the angle on each frame?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1334#respond' onclick='return addComment.moveForm( "div-comment-1334", "1334", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1340" class="comment odd alt thread-even depth-1 parent">
			<article id="div-comment-1340" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1340">
							<time datetime="2012-11-23T11:22:52+00:00">
								November 23, 2012 at 11:22 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hai,<br />
I want to make game which is like rubic&#8217;s cube.I had created four cubes which consisting of different images.I used four render classes and four surface view to doing it.Instead of that within one surface view i want to create four cube and it want to spin on touch event.How can we detect the object in the surface view???Please help!!!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1340#respond' onclick='return addComment.moveForm( "div-comment-1340", "1340", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1345" class="comment byuser comment-author-oes_admin bypostauthor even depth-2">
			<article id="div-comment-1345" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1345">
							<time datetime="2012-11-23T17:15:06+00:00">
								November 23, 2012 at 5:15 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>You can use basic collision detection &#8212; I have not written up about that here but this might help you out: <a href="http://stackoverflow.com/search?q=collision+detection+opengl" rel="nofollow">http://stackoverflow.com/search?q=collision+detection+opengl</a>  </p>
<p>Basically when the user touches the screen you check which cube was touched. Heck, if you only have four touchable cubes maybe you can do this with the coordinates alone &#8212; if the user touched the top left part of the screen, move the top-left cube when they drag their finger.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1345#respond' onclick='return addComment.moveForm( "div-comment-1345", "1345", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1349" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1349" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1349">
							<time datetime="2012-11-25T01:20:11+00:00">
								November 25, 2012 at 1:20 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi everyone,</p>
<p>You people might want to search Google Play for &#8220;3D Model Viewer&#8221; by Jeffrey Blattman and install the app. It is a 3D viewer which reads both OFF and OBJ files and has a nice working alternative on the above touching stuff, including zoom and slowing down rotation after the user releases the 3d object&#8230;</p>
<p>Full source is at Google Code <a href="http://code.google.com/p/modelview-android/" title="modelview-android" rel="nofollow"> and works fine on android 2.1.1, 4.0.3 and 4.1.1 (my toys at home).</p>
<p>Cheers, Rene</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1349#respond' onclick='return addComment.moveForm( "div-comment-1349", "1349", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1353" class="comment even thread-even depth-1">
			<article id="div-comment-1353" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1353">
							<time datetime="2012-11-27T10:59:59+00:00">
								November 27, 2012 at 10:59 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>hai,<br />
I want to know the object co-ordinates of a 3D cube on touch event.Here I am getting the screen coordinates.<br />
public boolean onTouchEvent(MotionEvent e)<br />
	    {<br />
	        float x = e.getX();<br />
	        float y = e.getY();<br />
	        Log.d(&#8220;Mytag&#8221;, &#8220;Coords: x=&#8221; + e.getX() + &#8220;,y=&#8221; + e.getY());<br />
			return true;<br />
	    }<br />
Please help me&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1353#respond' onclick='return addComment.moveForm( "div-comment-1353", "1353", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1355" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1355" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1355">
							<time datetime="2012-11-27T13:40:25+00:00">
								November 27, 2012 at 1:40 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hey Salu,</p>
<p>That is correct. If you step back for a moment you will realize that the phone can only give you the coords of the user&#8217;s touch on the screen. After all, the screen is nothing mor than a 2D piece of glass (sortof..).<br />
You will need to translate real screen coords to model coords. After an &#8220;OnDraw&#8221; event, you know exactly where your object is. The info is in the Matrix.<br />
Also, check &#8220;LessonSevenActivity&#8221; (I&#8217;m messing with that), in the ontouch event you can see that the previous X and Y are saved and are being used to &#8220;remember&#8221; where the object was.</p>
<p>Further, searching google with &#8220;opengl object picking&#8221; will get you a few usefull answers.</p>
<p>Cheers</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1355#respond' onclick='return addComment.moveForm( "div-comment-1355", "1355", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1356" class="comment even thread-even depth-1">
			<article id="div-comment-1356" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1356">
							<time datetime="2012-11-27T13:48:16+00:00">
								November 27, 2012 at 1:48 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I forgot, DO check the source of ModelViewer I mentioned above. In ModelViewerActivity there&#8217;s a Handler() and an OnTouch() in which you can see an alternative solution. There too, the previous coords are saved.<br />
This is inevitable, all movers/touchers/translaters/rotators I have seen do this&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1356#respond' onclick='return addComment.moveForm( "div-comment-1356", "1356", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1357" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1357" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1357">
							<time datetime="2012-11-27T14:32:06+00:00">
								November 27, 2012 at 2:32 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>I am a very experienced software developer, but know little about 3D development. What I do know, however, is that on one side you create this OpenGL 3D world and on the other side there is this dumb 2D PC/Phone real world with it&#8217;s user events. Neither world does know the other world exist:</p>
<p>OpenGL provides the 3D &#8220;manipulation and viewing&#8221; routines, the PC/Phone the &#8220;user interaction&#8221; routines. And simply said, the &#8220;3D handlers&#8221; (move/translate/rotate etc) have to react on what the device&#8217;s &#8220;eventhandlers&#8221; (touch, fling, tap etc) tell what the user is currently doing.</p>
<p>It may be a little abstract, but the only way YOU can unfluence both worlds is to REMEMBER what happened/is happening in both worlds and act on that info.</p>
<p>In the case of a MOVE-action:</p>
<p>The user touches and holds finger down -&gt; remember x,y -&gt; user moves finger -&gt; check distance between old x,y and new x,y -&gt; if finger moved, translate new screen coords to 3D distance save new x,y to old and render again. Keep doing this until users lifts finger.</p>
<p>Hope this helps a bit more&#8230;.</p>
<p>Cheers, Rene</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1357#respond' onclick='return addComment.moveForm( "div-comment-1357", "1357", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1360" class="comment even thread-even depth-1">
			<article id="div-comment-1360" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1360">
							<time datetime="2012-11-28T06:13:09+00:00">
								November 28, 2012 at 6:13 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hai rene,<br />
Thankyou for the prompt response and well explanation.Actually I am a beginner in software development and this opengl stuffs.So that i am not able to do that.I created four 3D cube with this vertices.When I touch on the cube i want to know the vertices of the object and thereby spin that cube.Please help me!! sorry for the inconvinence.<br />
 private float[] vertices = {<br />
		   -1.0f, -1.0f, -1.0f,<br />
           1.0f, -1.0f, -1.0f,<br />
           1.0f,  1.0f, -1.0f,<br />
           -1.0f, 1.0f, -1.0f,<br />
           -1.0f, -1.0f,  1.0f,<br />
           1.0f, -1.0f,  1.0f,<br />
           1.0f,  1.0f,  1.0f,<br />
           -1.0f,  1.0f,  1.0f<br />
   };</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1360#respond' onclick='return addComment.moveForm( "div-comment-1360", "1360", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1361" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1361" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1361">
							<time datetime="2012-11-29T01:44:54+00:00">
								November 29, 2012 at 1:44 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>For the time being I can&#8217;t help you further with that as I am currently also struggling to understand the same subject of object picking.</p>
<p>I can give you a piece of code (in object pascal) which I am trying to understand. The point is that OpenGL, next to GL_PROJECTION and GL_RENDER, also has a GL_SELECT constant you can pas the glRenderMode() function. This effectively means that you also have to create a &#8220;selection&#8221; matrix/buffer.</p>
<p>As soon as I have a simple working android app I will get back to you with the code. For now the Pascal version (close enough to Java)(only the relevant code):</p>
<p>The program shows a matrix of 3&#215;3 colored squares on the screen and tells you which square you picked with the mouse.</p>
<p><b>procedure OnDraw();</b><br />
  var i : GLint;<br />
begin<br />
  glClear(GL_COLOR_BUFFER_BIT);// Clear the colour buffer</p>
<p>  DrawSquares(GL_RENDER);// Render the scene<br />
  glFlush();// ( Force the buffer to draw or send a network packet of commands in a networked system)<br />
end;</p>
<p><b>procedure DrawSquares(mode : GLenum);</b><br />
var i, j : GLuint;<br />
begin</p>
<p>    for i := 0 to 2 do                           // For each column<br />
    begin<br />
      if mode = GL_SELECT then glLoadName(i+1);  // Load a name<br />
      for j := 0 to 2 do                         // For each Row<br />
      begin<br />
           if mode = GL_SELECT then<br />
           begin<br />
            glPushName(j+1);                     // Add the name to the object<br />
           end;</p>
<p>           glColor3f ( i/3.0, j/3.0,board[i][j]/3.0); // Set the colour for the square<br />
           glRecti (i, j, i+1, j+1);             // Draw the square<br />
           if mode = GL_SELECT then glPopName;   // &#8220;Close&#8221; the named object<br />
      end;<br />
    end;<br />
end;</p>
<p><b>procedure OnMouse;</b><br />
begin<br />
  case MouseButton of<br />
  1: // Left Mouse Button<br />
    begin<br />
      PickSquares();// Pick any squares underneath the mouse pointer<br />
      MouseButton := 0; // Cancel our mouse click (To use this procedure as a mouse down event remove this line)<br />
    end;<br />
  2: // Right Mouse Button<br />
    begin<br />
      MouseButton := 0; // Cancel our mouse click (To use this procedure as a mouse down event remove this line)<br />
    end;<br />
  3: // Middle Mouse Button<br />
    begin<br />
      MouseButton := 0; // Cancel our mouse click (To use this procedure as a mouse down event remove this line)<br />
    end;<br />
  end;<br />
end;</p>
<p><b>procedure ProcessHits(hits : GLint; buffer : array of GLuint);</b><br />
var i, j, ii, jj : Cardinal;<br />
    names : GLuint;<br />
    ptr : PGLuint;<br />
begin<br />
    SetLength(Output,1);<br />
    Output[High(Output)] := &#8216;Hits = &#8216; + IntToStr(hits);<br />
    ptr := @PGLuint(buffer[0]); // Create a pointer to the buffer<br />
    for i := 0 to hits &#8211; 1 do // For each hit<br />
    begin<br />
        names := ptr^;<br />
        SetLength(Output,Length(Output)+1);<br />
        Output[High(Output)] := &#8216;  Number of names for hit &#8216;  + IntToStr(i+1) + &#8216; = &#8216; + IntToStr(names); Inc(ptr);<br />
        SetLength(Output,Length(Output)+1);<br />
        Output[High(Output)] := &#8216;  z1 is &#8216; + FloatToStr(RoundTo(ptr^/$7fffffff,-2)); Inc(ptr);<br />
        SetLength(Output,Length(Output)+1);<br />
        Output[High(Output)] := &#8216;  z2 is &#8216; + FloatToStr(RoundTo(ptr^/$7fffffff,-2)); Inc(ptr);<br />
        SetLength(Output,Length(Output)+1);<br />
        Output[High(Output)] := &#8216;  the name is &#8216;;<br />
        for j := 0 to names &#8211; 1 do      // for each name<br />
        begin<br />
          Output[High(Output)] := Output[High(Output)] + IntToStr(ptr^)  + &#8216;.&#8217;;<br />
            if (j = 0) then   //  set row and column  */<br />
                ii := ptr^ -1<br />
            else if (j  = 1) then<br />
                jj := ptr^ &#8211; 1;<br />
            Inc(ptr);</p>
<p>        end;<br />
        board[ii][jj] := (board[ii][jj] + 1) mod 3;<br />
    end;</p>
<p>end;</p>
<p><b>procedure PickSquares();</b><br />
var selectBuf : array [0..BUFSIZE -1] of GLuint;<br />
    hits : GLint;<br />
    viewport : array [0..3] of GLint;<br />
    x, y : GLint;<br />
begin</p>
<p>    x := Xcoord; // Cet the current mouse coordinates<br />
    y := Ycoord;</p>
<p>    glGetIntegerv (GL_VIEWPORT, @viewport); // Get the current viewport</p>
<p>    glSelectBuffer (BUFSIZE, @selectBuf); // Assign the selection buffer<br />
    glRenderMode(GL_SELECT); // Change the render mode to Selction Mode</p>
<p>    glInitNames();// Init Names for Selection<br />
    glPushName(0);// Add the default name</p>
<p>    glMatrixMode (GL_PROJECTION);// Switch to Projection matrix/stack<br />
    glPushMatrix();// Load a new projection matrix onto the stack</p>
<p>    glLoadIdentity ();<br />
        // Create 5&#215;5 pixel picking region near cursor location<br />
        gluPickMatrix(x, (viewport[3] &#8211; y), 5.0, 5.0, @viewport);<br />
        gluOrtho2D (0.0, 3.0, 0.0, 3.0);<br />
        DrawSquares (GL_SELECT);// Draw squares in selection mode<br />
    glPopMatrix();<br />
    glFlush();// Force the render</p>
<p>    hits := glRenderMode(GL_RENDER);// Change back to Render mode and return any hits<br />
    processHits(hits, selectBuf);// Process all hits in the selection buffer<br />
end;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1361#respond' onclick='return addComment.moveForm( "div-comment-1361", "1361", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1362" class="comment even thread-even depth-1">
			<article id="div-comment-1362" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1362">
							<time datetime="2012-11-29T02:52:47+00:00">
								November 29, 2012 at 2:52 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>Some more reading on <a href="http://nehe.gamedev.net/" rel="nofollow">Nehe Productions</a>, check lesson 32 -&gt; <b>Picking, Alpha Blending, Alpha Testing, Sorting</b>.<br />
It&#8217;s a simple picking game and a more elaborate example of my previous post. At the bottom of the lesson you will find a link to a Java port (LWJGL version).</p>
<p>Cheers (again!)</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1362#respond' onclick='return addComment.moveForm( "div-comment-1362", "1362", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1364" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1364" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1364">
							<time datetime="2012-12-01T02:37:41+00:00">
								December 1, 2012 at 2:37 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>Here is a nice piece of code to help you on your way, it&#8217;s part of the Android SDK:</p>
<p>com.example.android.apis.graphics.kube</p>
<p>This is a package in the ApiDemos examples showing a Rubik cube!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1364#respond' onclick='return addComment.moveForm( "div-comment-1364", "1364", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1365" class="comment even thread-even depth-1">
			<article id="div-comment-1365" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1365">
							<time datetime="2012-12-01T11:40:04+00:00">
								December 1, 2012 at 11:40 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hai Rene,<br />
Thankyou very much for your kind consideration.I go through all those stuffs but cannot able to do my requirement and still working for it&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1365#respond' onclick='return addComment.moveForm( "div-comment-1365", "1365", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1370" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1370" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1370">
							<time datetime="2012-12-03T13:25:36+00:00">
								December 3, 2012 at 1:25 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hai rene,<br />
I am also stuck in getting the coordinates.Actually  I&#8217;m using textures so that it is difficult to checking the pixel color with glReadPixels.In object picking MatrixTakling and MatrixGrabber but its not supporting in openGl.so i don&#8217;t getting the how to solve the problem.So please help me&#8230;<br />
Here i am sending my classes.<br />
cube class<br />
import java.io.IOException;<br />
import java.io.InputStream;<br />
import java.nio.ByteBuffer;<br />
import java.nio.ByteOrder;<br />
import java.nio.FloatBuffer;<br />
import javax.microedition.khronos.opengles.GL10;<br />
import android.content.Context;<br />
import android.graphics.Bitmap;<br />
import android.graphics.BitmapFactory;<br />
import android.graphics.Canvas;<br />
import android.opengl.GLU;<br />
import android.opengl.GLUtils;<br />
import android.util.Log;<br />
import android.view.MotionEvent;<br />
import android.view.View;</p>
<p>public class Cube1 {<br />
   private FloatBuffer vertexBuffer; // Buffer for vertex-array<br />
   private FloatBuffer texBuffer;    // Buffer for texture-coords-array (NEW)</p>
<p>   private float[] vertices = {<br />
		   -1.0f, -1.0f, -1.0f,<br />
           1.0f, -1.0f, -1.0f,<br />
           1.0f,  1.0f, -1.0f,<br />
           -1.0f, 1.0f, -1.0f,<br />
           -1.0f, -1.0f,  1.0f,<br />
           1.0f, -1.0f,  1.0f,<br />
           1.0f,  1.0f,  1.0f,<br />
           -1.0f,  1.0f,  1.0f<br />
   };</p>
<p>   float[] texCoords = { // Texture coords for the above face (NEW)<br />
      0.0f, 1.0f,  // A. left-bottom (NEW)<br />
      1.0f, 1.0f,  // B. right-bottom (NEW)<br />
      0.0f, 0.0f,  // C. left-top (NEW)<br />
      1.0f, 0.0f   // D. right-top (NEW)<br />
   };<br />
   private int numFaces = 6;<br />
   private int[] imageFileIDs = {  // Image file IDs<br />
      R.drawable.teddy_1,<br />
      R.drawable.teddy_2,<br />
      R.drawable.teddy_3,<br />
      R.drawable.teddy_4,<br />
      R.drawable.teddy_5,<br />
      R.drawable.teddy_6<br />
   };<br />
   private int[] textureIDs = new int[numFaces];<br />
   private Bitmap[] bitmap = new Bitmap[numFaces];</p>
<p>   private float cubeHalfSize = 1.2f;<br />
private boolean touched;<br />
private int x,y;</p>
<p>   public Cube1(Context context) {<br />
	      // Allocate vertex buffer. An float has 4 bytes<br />
	      ByteBuffer vbb = ByteBuffer.allocateDirect(12 * 4 * numFaces);<br />
	      vbb.order(ByteOrder.nativeOrder());<br />
	      vertexBuffer = vbb.asFloatBuffer();</p>
<p>	      // Read images. Find the aspect ratio and adjust the vertices accordingly.<br />
	      for (int face = 0; face  imgHeight) {<br />
	            faceHeight = faceHeight * imgHeight / imgWidth;<br />
	         } else {<br />
	            faceWidth = faceWidth * imgWidth / imgHeight;<br />
	         }<br />
	         float faceLeft = -faceWidth / 2;<br />
	         float faceRight = -faceLeft;<br />
	         float faceTop = faceHeight / 2;<br />
	         float faceBottom = -faceTop;</p>
<p>	         // Define the vertices for this face<br />
	         float[] vertices = {<br />
	            faceLeft,  faceBottom, 0.0f,  // 0. left-bottom-front<br />
	            faceRight, faceBottom, 0.0f,  // 1. right-bottom-front<br />
	            faceLeft,  faceTop,    0.0f,  // 2. left-top-front<br />
	            faceRight, faceTop,    0.0f,  // 3. right-top-front<br />
	         };<br />
	         vertexBuffer.put(vertices);  // Populate<br />
	      }<br />
	      vertexBuffer.position(0);    // Rewind</p>
<p>	      // Allocate texture buffer. An float has 4 bytes. Repeat for 6 faces.<br />
	      float[] texCoords = {<br />
	         0.0f, 1.0f,  // A. left-bottom<br />
	         1.0f, 1.0f,  // B. right-bottom<br />
	         0.0f, 0.0f,  // C. left-top<br />
	         1.0f, 0.0f   // D. right-top<br />
	      };<br />
	      ByteBuffer tbb = ByteBuffer.allocateDirect(texCoords.length * 4 * numFaces);<br />
	      tbb.order(ByteOrder.nativeOrder());<br />
	      texBuffer = tbb.asFloatBuffer();<br />
	      for (int face = 0; face &lt; numFaces; face++) {<br />
	         texBuffer.put(texCoords);<br />
	      }<br />
	      texBuffer.position(0);   // Rewind<br />
	   }</p>
<p>   // Draw the shape<br />
   public void draw(GL10 gl) {<br />
      gl.glFrontFace(GL10.GL_CCW);    // Front face in counter-clockwise orientation<br />
      gl.glEnable(GL10.GL_CULL_FACE); // Enable cull face<br />
      gl.glCullFace(GL10.GL_BACK);    // Cull the back face (don&#039;t display) </p>
<p>      gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);<br />
      gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);<br />
      gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);  // Enable texture-coords-array (NEW)<br />
      gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, texBuffer); // Define texture-coords buffer (NEW)</p>
<p>      // front<br />
      gl.glPushMatrix();<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[0]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // left<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(270.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[1]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // back<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(180.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[2]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // right<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(90.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[3]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // top<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(270.0f, 1.0f, 0.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[4]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // bottom<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(90.0f, 1.0f, 0.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[5]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);<br />
      gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);<br />
      gl.glDisable(GL10.GL_CULL_FACE);<br />
   }</p>
<p>public void loadTexture(GL10 gl) {<br />
	      gl.glGenTextures(6, textureIDs, 0); // Generate texture-ID array for 6 IDs</p>
<p>	      // Generate OpenGL texture images<br />
	      for (int face = 0; face &lt; numFaces; face++) {<br />
	         gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[face]);<br />
	         // Build Texture from loaded bitmap for the currently-bind texture ID<br />
	         GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap[face], 0);<br />
	         bitmap[face].recycle();</p>
<p>	      }<br />
	   }</p>
<p>}<br />
Render class<br />
import java.io.IOException;<br />
import java.io.InputStream;<br />
import java.nio.ByteBuffer;<br />
import java.nio.ByteOrder;<br />
import java.nio.FloatBuffer;<br />
import javax.microedition.khronos.opengles.GL10;<br />
import android.content.Context;<br />
import android.graphics.Bitmap;<br />
import android.graphics.BitmapFactory;<br />
import android.graphics.Canvas;<br />
import android.opengl.GLU;<br />
import android.opengl.GLUtils;<br />
import android.util.Log;<br />
import android.view.MotionEvent;<br />
import android.view.View;</p>
<p>public class Cube1 {<br />
   private FloatBuffer vertexBuffer; // Buffer for vertex-array<br />
   private FloatBuffer texBuffer;    // Buffer for texture-coords-array (NEW)</p>
<p>   private float[] vertices = {<br />
		   -1.0f, -1.0f, -1.0f,<br />
           1.0f, -1.0f, -1.0f,<br />
           1.0f,  1.0f, -1.0f,<br />
           -1.0f, 1.0f, -1.0f,<br />
           -1.0f, -1.0f,  1.0f,<br />
           1.0f, -1.0f,  1.0f,<br />
           1.0f,  1.0f,  1.0f,<br />
           -1.0f,  1.0f,  1.0f<br />
   };</p>
<p>   float[] texCoords = { // Texture coords for the above face (NEW)<br />
      0.0f, 1.0f,  // A. left-bottom (NEW)<br />
      1.0f, 1.0f,  // B. right-bottom (NEW)<br />
      0.0f, 0.0f,  // C. left-top (NEW)<br />
      1.0f, 0.0f   // D. right-top (NEW)<br />
   };<br />
   private int numFaces = 6;<br />
   private int[] imageFileIDs = {  // Image file IDs<br />
      R.drawable.teddy_1,<br />
      R.drawable.teddy_2,<br />
      R.drawable.teddy_3,<br />
      R.drawable.teddy_4,<br />
      R.drawable.teddy_5,<br />
      R.drawable.teddy_6<br />
   };<br />
   private int[] textureIDs = new int[numFaces];<br />
   private Bitmap[] bitmap = new Bitmap[numFaces];</p>
<p>   private float cubeHalfSize = 1.2f;<br />
private boolean touched;<br />
private int x,y;</p>
<p>   public Cube1(Context context) {<br />
	      // Allocate vertex buffer. An float has 4 bytes<br />
	      ByteBuffer vbb = ByteBuffer.allocateDirect(12 * 4 * numFaces);<br />
	      vbb.order(ByteOrder.nativeOrder());<br />
	      vertexBuffer = vbb.asFloatBuffer();</p>
<p>	      // Read images. Find the aspect ratio and adjust the vertices accordingly.<br />
	      for (int face = 0; face  imgHeight) {<br />
	            faceHeight = faceHeight * imgHeight / imgWidth;<br />
	         } else {<br />
	            faceWidth = faceWidth * imgWidth / imgHeight;<br />
	         }<br />
	         float faceLeft = -faceWidth / 2;<br />
	         float faceRight = -faceLeft;<br />
	         float faceTop = faceHeight / 2;<br />
	         float faceBottom = -faceTop;</p>
<p>	         // Define the vertices for this face<br />
	         float[] vertices = {<br />
	            faceLeft,  faceBottom, 0.0f,  // 0. left-bottom-front<br />
	            faceRight, faceBottom, 0.0f,  // 1. right-bottom-front<br />
	            faceLeft,  faceTop,    0.0f,  // 2. left-top-front<br />
	            faceRight, faceTop,    0.0f,  // 3. right-top-front<br />
	         };<br />
	         vertexBuffer.put(vertices);  // Populate<br />
	      }<br />
	      vertexBuffer.position(0);    // Rewind</p>
<p>	      // Allocate texture buffer. An float has 4 bytes. Repeat for 6 faces.<br />
	      float[] texCoords = {<br />
	         0.0f, 1.0f,  // A. left-bottom<br />
	         1.0f, 1.0f,  // B. right-bottom<br />
	         0.0f, 0.0f,  // C. left-top<br />
	         1.0f, 0.0f   // D. right-top<br />
	      };<br />
	      ByteBuffer tbb = ByteBuffer.allocateDirect(texCoords.length * 4 * numFaces);<br />
	      tbb.order(ByteOrder.nativeOrder());<br />
	      texBuffer = tbb.asFloatBuffer();<br />
	      for (int face = 0; face &lt; numFaces; face++) {<br />
	         texBuffer.put(texCoords);<br />
	      }<br />
	      texBuffer.position(0);   // Rewind<br />
	   }</p>
<p>   // Draw the shape<br />
   public void draw(GL10 gl) {<br />
      gl.glFrontFace(GL10.GL_CCW);    // Front face in counter-clockwise orientation<br />
      gl.glEnable(GL10.GL_CULL_FACE); // Enable cull face<br />
      gl.glCullFace(GL10.GL_BACK);    // Cull the back face (don&#039;t display) </p>
<p>      gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);<br />
      gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);<br />
      gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);  // Enable texture-coords-array (NEW)<br />
      gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, texBuffer); // Define texture-coords buffer (NEW)</p>
<p>      // front<br />
      gl.glPushMatrix();<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[0]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // left<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(270.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[1]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // back<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(180.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[2]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // right<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(90.0f, 0.0f, 1.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[3]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // top<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(270.0f, 1.0f, 0.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[4]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      // bottom<br />
      gl.glPushMatrix();<br />
      gl.glRotatef(90.0f, 1.0f, 0.0f, 0.0f);<br />
      gl.glTranslatef(0.0f, 0.0f, 1.0f);<br />
      gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[5]);<br />
      gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, 0, 4);<br />
      gl.glPopMatrix();</p>
<p>      gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);<br />
      gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);<br />
      gl.glDisable(GL10.GL_CULL_FACE);<br />
   }</p>
<p>public void loadTexture(GL10 gl) {<br />
	      gl.glGenTextures(6, textureIDs, 0); // Generate texture-ID array for 6 IDs</p>
<p>	      // Generate OpenGL texture images<br />
	      for (int face = 0; face &lt; numFaces; face++) {<br />
	         gl.glBindTexture(GL10.GL_TEXTURE_2D, textureIDs[face]);<br />
	         // Build Texture from loaded bitmap for the currently-bind texture ID<br />
	         GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap[face], 0);<br />
	         bitmap[face].recycle();</p>
<p>	      }<br />
	   }</p>
<p>}<br />
Surfaceview<br />
package com.tcs.ignite;</p>
<p>import javax.microedition.khronos.opengles.GL10;</p>
<p>import android.app.Activity;<br />
import android.content.Context;<br />
import android.opengl.GLSurfaceView;<br />
import android.util.DisplayMetrics;<br />
import android.util.Log;<br />
import android.view.Display;<br />
import android.view.MotionEvent;</p>
<p>public class Surfaceview1 extends GLSurfaceView{<br />
	private static final float TOUCH_SCALE_FACTOR = 1.0f;<br />
	public static Object matrixTrackingGL;<br />
	GL10 gl;<br />
	Renderer1 mrenderer = new Renderer1(getContext());<br />
	private float mPreviousX;<br />
	private float mPreviousY;<br />
	 private float mDensity;<br />
	 int windowwidth;<br />
	 private Cube1 mcube1;<br />
		private Cube1 mcube2;<br />
		private Cube1 mcube3;<br />
		private Cube1 mcube4;</p>
<p>	// final DisplayMetrics displayMetrics = new DisplayMetrics();<br />
	//Display display = getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);<br />
	public Surfaceview1(Context context,GL10 gl)<br />
	{<br />
		super(context);<br />
		setRenderer(mrenderer);<br />
		this.gl=gl;<br />
		 //mDensity = metrics.density;<br />
		setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);<br />
	}</p>
<p>	/*    public boolean onTouchEvent(MotionEvent e)<br />
	    {<br />
	        float x = e.getX();<br />
	        float y = e.getY();<br />
	        Log.d(&quot;Mytag&quot;, &quot;Coords: x=&quot; + x + &quot;,y=&quot; + y);<br />
			return true;<br />
	    }*/<br />
	}</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1370#respond' onclick='return addComment.moveForm( "div-comment-1370", "1370", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1372" class="comment even thread-even depth-1">
			<article id="div-comment-1372" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1372">
							<time datetime="2012-12-06T00:52:00+00:00">
								December 6, 2012 at 12:52 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Salu,</p>
<p>I can already see signs of &#8220;spaghettification&#8221; in your code. I&#8217;m not making fun of you or try to be belittling, but I think you should really step back for a while and try to understand what you need to know to develop a 3D program. Pulling random code together and try to make it work will work eventually, but you will probably be left with such a big heap of spaghetti it would even make an Italian choke.</p>
<p>Why don&#8217;t we team up for a while and see where it leads? You want this cube rotation/selection mechanism, so do I. No need to reinvent things twice. In the mean time we both have fun learning and programming while others too can profit from our findings. What do you think?</p>
<p>I have already found fairly good structured code in the SDK examples and written a first lesson (will follow shortly) on how to create a new project with it. The second lesson will discuss splitting the code in structured parts and how to make it recyclable. Of course I will also discuss making a cube &#8220;touchable&#8221;. Lesson three will be about thinking and envisioning 3D environments linked to selecting and picking 3D objects. I guess lesson four will be about texturing the darn thing.</p>
<p>Probably not entirely what you were hoping for, but while I DO think in 3D and software development, I don&#8217;t do well with OpenGL and Java (just yet).</p>
<p>Let me know what you think.<br />
Cheers!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1372#respond' onclick='return addComment.moveForm( "div-comment-1372", "1372", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1379" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1379" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1379">
							<time datetime="2012-12-06T05:11:27+00:00">
								December 6, 2012 at 5:11 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi rene,<br />
I am very happy to your kind reply.I am agree with your views.I am very new in this software development even in this programming language.This is my first assignment.So that I become stuck.But i will do that thing within a day.I am not making fun of you:(<br />
Thankyou very much for your thoughtful gift.And waiting for your tutorial:)</p>
<p>Thanking You,<br />
Salu</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1379#respond' onclick='return addComment.moveForm( "div-comment-1379", "1379", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1380" class="comment even thread-even depth-1">
			<article id="div-comment-1380" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1380">
							<time datetime="2012-12-06T15:08:26+00:00">
								December 6, 2012 at 3:08 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hey everyone,</p>
<p>It has been a long time since I last messed with OpenGL (must be a decade ago) and most certainly not with Android/Java. While I searched the net for </p>
<p>examples and code I might be able to use, I came across <b>learnopengles.com</b>. Going over the various tutorials, I realized I had forgotten a lot about </p>
<p>OpenGL and needed to start all over again. Trying to help Salu I decided that I could help others and myself as well. After all, this IS a learning site and I HAVE </p>
<p>been writing software since, I dunno, 1987. Currently I am both a software engineer and a photographer with a long interest in 3D software (as a user).</p>
<p>So, why not give back some experience and have fun with OpenGL and Java&#8230;</p>
<p>This first tutorial is not too interesting, just a recipe for creating a working OpenGL project with an Android shell. It is mostly about creating a new Android </p>
<p>project and reusing the &#8220;Rubik Cube&#8221; example from the Android SDK ApiDemos (API 17 samples). While I am extending and changing the code, I will write </p>
<p>further tutorials on why I changed things and how I did it.</p>
<p>For now, let&#8217;s get busy!!</p>
<p><b>(1) Clean start</b><br />
In your IDE: close <b>ALL</b> open projects</p>
<p><b>(2) Creating a new project: Kube</b></p>
<p>Menu: [New][Other][Android&#8230;Android Application Project]</p>
<p>&#8220;Create Application&#8221; &#8211; window:<br />
=&gt; Application Name: <b>Kube</b><br />
=&gt; Project Name: <b>Kube</b><br />
=&gt; Package Name: <b>com.example.android.apis.graphics.kube</b>  (the same package name as the &#8220;Kube&#8221; activity in the ApiDemos example). Ignore the </p>
<p>warning sign!</p>
<p>=&gt; Select the API that works for you (I choose <b>7</b>, <b>17</b> and <b>17</b> (Android 2.1, 4.2 and 4.2) this depends on your test phone and the </p>
<p><b>SDKs you downloaded</b>).</p>
<p> &#8211; Button</p>
<p>=&gt; Un/check &#8220;Create custom launcher icon&#8221; -&gt; your choice<br />
=&gt; Check &#8220;Create activity&#8221;=&gt;<br />
=&gt; Uncheck &#8220;Mark this project as library&#8221;<br />
=&gt; Check &#8220;Create project in workspace&#8221;<br />
=&gt; Uncheck &#8220;Working sets&#8221;</p>
<p> &#8211; Button</p>
<p>=&gt; Check &#8220;Create Activity&#8221;<br />
=&gt; Select &#8220;Fullscreen Activity&#8221;</p>
<p> &#8211; Button</p>
<p>=&gt; Activity name: Kube<br />
=&gt; Layout name: kube</p>
<p> &#8211; Button</p>
<p><b>(3) Just checking</b><br />
=&gt; Run the project you just created, so you know what it does&#8230; Nothing too interesting, but at least you&#8217;ve got something runnable.</p>
<p><b>(4) Rename</b><br />
=&gt; In the IDE goto package: <b>com.example.android.apis.graphics.kube</b> of the new project and rename (refactor) <b>Kube.java</b> to </p>
<p><b>KubeOrg.java</b>. In the next step we will copy some java source into this package and we don&#8217;t want to overwrite this file.</p>
<p><b>(5) Copy SDK sample code</b></p>
<p>In the graphics/OpenGL section of the SDK example &#8220;ApiDemos&#8221; you can find an animated and rotating Rubik Cube demo. The code of this demo is rather </p>
<p>well constructed and offers almost all of the code we need to construct our own version.</p>
<p>=&gt; Go to the SDK examples folder and find the <b>Kube</b> demo, mine resides in:<br />
C:\Program Files (x86)\Android\android-sdk\samples\android-17\ApiDemos\<b>src\com\example\android\apis\graphics\kube</b><br />
(So, don&#8217;t copy the folder, only the files!)</p>
<p>=&gt; Select all files in this folder and paste them into the new project in de IDE workspace, in my case:<br />
F:\Development\workspace\Kube\<b>src\com\example\android\apis\graphics\kube</b><br />
If your IDE auto-refreshes you will see the pasted files in your project, otherwise press  to refresh. Ignore any errors, no need to correct them at this </p>
<p>stage. Your project will probably even compile and run, but won&#8217;t see any OpenGL action, just the same output as in step <b>(3).</p>
<p></b><b>(6) Merging the code</b><br />
This can get messy if you&#8217;re not careful enough. What we are going to do is to copy code from <b>KubeOrg.java</b> into the pasted <b>Kube.java</b> and </p>
<p>create a running version of the Kube demo on top of the generated Fullscreen layout. We could have chosen to remove all the generated code, but this code </p>
<p>offers a nice shell for our demo which can be reused at a later stage.</p>
<p>Files affected in this merge:<br />
<b>src.com.example.android.apis.graphics.kube.Kube.java</b>, <b>res.layout.Kube.xml</b> and <b>AndroidManifest.xml</b>. No more, no less. We are not </p>
<p>even going to open any of the other files so we won&#8217;t get distracted with irrelevant (for now) code. During the merge you will get errors here and there, </p>
<p>simply ignore them.</p>
<p>Merging <b>Kube.java</b> and <b>KubeOrg.java</b><br />
=&gt; The imports: Hit  +  in both sources (&#8220;expand all&#8221; so you can see what you&#8217;re doing) and copy all imports of <b>KubeOrg into </p>
<p>Kube</b> and remove any duplicate imports from <b>Kube</b><br />
=&gt; Now it&#8217;s time to pay extra attention as we will copy at lot of code <b>blindly</b>: First  hit  +  in both sources (&#8220;collapse all&#8221;, I told </p>
<p>you, we&#8217;re gonna drive blind&#8230;).<br />
=&gt; Go to <b>Kube</b> and find the statements:</p>
<p><b>public void animate() {</b><br />
<b>GLSurfaceView mView;</b></p>
<p>and insert a few blank lines between them, just to make a bit of room.</p>
<p>=&gt; Go to <b>KubeOrg</b> and select everything from statement:</p>
<p><b>protected void onPostCreate(Bundle savedInstanceState) {</b></p>
<p>up to AND including the last <b>}</b> of method:<br />
<b>private void delayedHide(int delayMillis) {</b></p>
<p>Copy the lines and paste them into the blank lines of the previous step. Time to save &lt;Kube.java, while still ignoring errors&#8230;.<br />
Believe it or not, most of the heavy work has now been done with three more steps to go.</p>
<p><b>(7) Editting Kube.xml</b><br />
The easiest way to show our Rubik Kube in the existing Activity Layout is to create the possibility to add the glSurfaceView (<b>mView</b> in the code) as a </p>
<p>child to the layout. Inserting a new FrameLayout will do that job nicely.</p>
<p>=&gt; Open layout <b>Kube.xml</b> in text edit mode, find the  tag and insert a blank line or 2.<br />
=&gt; Copy the below code and insert it into the blank lines. Make sure it is at the same level as the !!!</p>
<p><code></p>
<p></code></p>
<p>No more editting to do in this file.</p>
<p><b>(8) Editting AndroidManifest.xml</b><br />
Your manifest shoul look like the code below. Make sure that are no references to <b>KubeOrg</b>, otherwise change those to <b>Kube</b>.</p>
<p>The manifest:</p>
<p><code></p>
<p></code></p>
<p><b>(9) Final touches to Kube.java</b><br />
The last thing we need to do is properly connecting our Rubik Cube (glSurface)View to our Activity Layout.</p>
<p>=&gt; Go to <b>Kube.java</b> again and first  hit  +  so everthing gets collapsed again.<br />
=&gt; Then only expand <b></b><br />
=&gt; Find <b>setContentView(mView);</b> and overwrite this statement with the following 3 lines of code:</p>
<p><code><br />
    setContentView(R.layout.kube);<br />
    final FrameLayout mBucketFrame = (FrameLayout) findViewById(R.id.bucketFrame);<br />
    mBucketFrame.addView(mView);<br />
</code></p>
<p>That&#8217;s it! Now you&#8217;ve got (theoretically) an error free compilable piece of code. So, hit save.</p>
<p><b>Final step: getting this show on the road</b><br />
=&gt; &#8220;Clean&#8221; your project: [Project][Clean&#8230;] and build it. This will clean out any existing errors, maybe close and reopen your project. In my version there are </p>
<p>no &#8220;warning&#8221; or other errors, so yours should have none too.</p>
<p>=&gt; [Run as][1 Android Application]</p>
<p>So far the first part of my beginners&#8217; series in which we created a fairly solid base for further OpenGL development. In the next part we are going to have a </p>
<p>closer look at the code, disect it and figure out how we need to change the code to do what we want it to do. I will also explain why I specifically choose </p>
<p><b>Kube</b> and will discuss the need of structured application design.</p>
<p>If you are going to fiddle with the code yourself, don&#8217;t forget to make a backup copy of the Kube project first&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1380#respond' onclick='return addComment.moveForm( "div-comment-1380", "1380", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1384" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1384" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1384">
							<time datetime="2012-12-06T15:29:59+00:00">
								December 6, 2012 at 3:29 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Sigh&#8230;<br />
You need to put in the TAG marker&#8217;s yourself</p>
<p><code><br />
//    FrameLayout<br />
//          android:id="@+id/bucketFrame"<br />
//          android:layout_width="match_parent"<br />
//          android:layout_height="wrap_content"<br />
//          android:layout_gravity="top|center_horizontal"<br />
//          tools:ignore="UselessParent"<br />
//    /FrameLayout<br />
</code></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1384#respond' onclick='return addComment.moveForm( "div-comment-1384", "1384", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1385" class="comment even thread-even depth-1">
			<article id="div-comment-1385" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1385">
							<time datetime="2012-12-06T15:32:28+00:00">
								December 6, 2012 at 3:32 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>That was <b>7</b>. For <b>8</b> you just change any <b>KubeOrg</b> to <b>Kube</b> in you AndroidManifest.xml.</p>
<p>Sorry for the mess!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1385#respond' onclick='return addComment.moveForm( "div-comment-1385", "1385", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1387" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1387" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1387">
							<time datetime="2012-12-07T08:02:53+00:00">
								December 7, 2012 at 8:02 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hai Rene,<br />
I am very happy to see your reply .But unfortunately I can&#8217;t get that.My Bad luck.Actually this forum become full of our comments.I think it also no fare.So it&#8217;s ok rene.Thankyou very much for your valuable thoughts and great help.<br />
Thanking you,<br />
Salu</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1387#respond' onclick='return addComment.moveForm( "div-comment-1387", "1387", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1389" class="comment even thread-even depth-1">
			<article id="div-comment-1389" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Rene van der Lende</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1389">
							<time datetime="2012-12-07T13:03:17+00:00">
								December 7, 2012 at 1:03 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Salu,<br />
Don&#8217;t give up just yet. I get my own little corner on this site shortly. We can discuss there,<br />
no worries.</p>
<p>I will make a ZIP You can download&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1389#respond' onclick='return addComment.moveForm( "div-comment-1389", "1389", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1392" class="comment byuser comment-author-rene odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-1392" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Rene</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1392">
							<time datetime="2012-12-08T00:10:35+00:00">
								December 8, 2012 at 12:10 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Salu (and others),</p>
<p>Here&#8217;s a link to the Github <a href="https://github.com/mediaVISION/Kube" rel="nofollow">Kube project</a> I created. Download a ZIP or clone it and import the project into your IDE.</p>
<p>Cheers!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1392#respond' onclick='return addComment.moveForm( "div-comment-1392", "1392", "respond", "812" )' aria-label='Reply to Rene'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1412" class="comment even depth-2 parent">
			<article id="div-comment-1412" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/2df4ccf48176f3e1beeeba9a4e14137f?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/2df4ccf48176f3e1beeeba9a4e14137f?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://kodra.net/projects/android/MagicCube.apk' rel='external nofollow' class='url'>Draško</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1412">
							<time datetime="2012-12-29T16:48:22+00:00">
								December 29, 2012 at 4:48 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I would like to join you. Some time ago I developed an app to visualise a rotating Rubik&#8217;s cube and have spent a very long time to resolve the perspective rotating in a realistic way. The solution is amazingly simple 😉</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1412#respond' onclick='return addComment.moveForm( "div-comment-1412", "1412", "respond", "812" )' aria-label='Reply to Draško'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1421" class="comment odd alt depth-3">
			<article id="div-comment-1421" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1421">
							<time datetime="2013-01-15T14:08:36+00:00">
								January 15, 2013 at 2:08 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Drasko,</p>
<p>Just today I received a notice someone had reacted, sorry for the delay, but it is great you want to join. It is my aim to help out beginning developers and learn stuff myself at th same time. I hope we can end up with a structured and easy to use Android developer toolbox.</p>
<p>At the moment I am preparing the first few subjects for discussion. Feel free to ask for subjects you find difficult as a developer, doesn&#8217;t have to be Android/Java related&#8230;</p>
<p>Cheers, Rene</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1421#respond' onclick='return addComment.moveForm( "div-comment-1421", "1421", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1395" class="comment even thread-even depth-1">
			<article id="div-comment-1395" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1395">
							<time datetime="2012-12-10T05:59:43+00:00">
								December 10, 2012 at 5:59 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Rene,<br />
It&#8217;s very good news to me.Thankyou very much Rene.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1395#respond' onclick='return addComment.moveForm( "div-comment-1395", "1395", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1396" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-1396" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/21eccfa9fd5d896e07356efe1d4a3a9b?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">salu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1396">
							<time datetime="2012-12-10T06:00:31+00:00">
								December 10, 2012 at 6:00 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Rene,<br />
It&#8217;s very good news to me.Thankyou very much.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1396#respond' onclick='return addComment.moveForm( "div-comment-1396", "1396", "respond", "812" )' aria-label='Reply to salu'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1423" class="comment even thread-even depth-1 parent">
			<article id="div-comment-1423" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/891cf41cd82e6e9032711b7c1ffcb453?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/891cf41cd82e6e9032711b7c1ffcb453?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">charlie</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1423">
							<time datetime="2013-01-16T13:05:18+00:00">
								January 16, 2013 at 1:05 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Doees anyone know what mRenderer is?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1423#respond' onclick='return addComment.moveForm( "div-comment-1423", "1423", "respond", "812" )' aria-label='Reply to charlie'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1424" class="comment byuser comment-author-oes_admin bypostauthor odd alt depth-2 parent">
			<article id="div-comment-1424" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1424">
							<time datetime="2013-01-16T14:45:45+00:00">
								January 16, 2013 at 2:45 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>This is an implementation of Android&#8217;s renderer interface (android.opengl.GLSurfaceView.Renderer) that handles surface created &#038; surface draw events. Things will make more sense if you check out the source on GitHub. Someday, I&#8217;m gonna come back to all of these posts and make the source excerpts clearer.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1424#respond' onclick='return addComment.moveForm( "div-comment-1424", "1424", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1427" class="comment even depth-3">
			<article id="div-comment-1427" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/891cf41cd82e6e9032711b7c1ffcb453?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/891cf41cd82e6e9032711b7c1ffcb453?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Charlie</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1427">
							<time datetime="2013-01-17T09:40:57+00:00">
								January 17, 2013 at 9:40 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thankyou</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1427#respond' onclick='return addComment.moveForm( "div-comment-1427", "1427", "respond", "812" )' aria-label='Reply to Charlie'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1425" class="comment odd alt depth-2">
			<article id="div-comment-1425" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bc521e207635d78a432071a31422674e?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://n/a' rel='external nofollow' class='url'>Rene van der Lende</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1425">
							<time datetime="2013-01-16T15:46:27+00:00">
								January 16, 2013 at 3:46 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>In simple terms: if mGlSurfaceView is a piece of paper/canvas, mRenderer is the painter who creates a nice painting. And, as OpenGL(ES)loops, mRenderer is called each loop. This way you can create a 3D &#8220;movie&#8221;, by simply changing camera positions, object rotation, texture changes, etc. each time it loops.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1425#respond' onclick='return addComment.moveForm( "div-comment-1425", "1425", "respond", "812" )' aria-label='Reply to Rene van der Lende'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1496" class="comment even thread-odd thread-alt depth-1 parent">
			<article id="div-comment-1496" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/b40b095adfb55170b53ea4781e689fd2?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/b40b095adfb55170b53ea4781e689fd2?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Deduu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1496">
							<time datetime="2013-03-28T04:47:35+00:00">
								March 28, 2013 at 4:47 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi,  I would like to ask why we are not using queueEvent in onTouchEvent here, meanwhile we used queueEvent in article &#8220;Listening to Android touchEvent and acting on them&#8221;?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1496#respond' onclick='return addComment.moveForm( "div-comment-1496", "1496", "respond", "812" )' aria-label='Reply to Deduu'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1497" class="comment byuser comment-author-oes_admin bypostauthor odd alt depth-2">
			<article id="div-comment-1497" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-1497">
							<time datetime="2013-03-28T14:30:34+00:00">
								March 28, 2013 at 2:30 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>queueEvent is usually better, but if you&#8217;re just updating 1 or 2 floats, you could also get away with just declaring them as volatile variables.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=1497#respond' onclick='return addComment.moveForm( "div-comment-1497", "1497", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-2397" class="comment even thread-even depth-1 parent">
			<article id="div-comment-2397" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/8449da15d1613742bd75a2765bf3e246?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/8449da15d1613742bd75a2765bf3e246?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">kuldeep</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2397">
							<time datetime="2014-11-04T10:33:53+00:00">
								November 4, 2014 at 10:33 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>is it possible in android without openGl or any engine?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2397#respond' onclick='return addComment.moveForm( "div-comment-2397", "2397", "respond", "812" )' aria-label='Reply to kuldeep'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-2401" class="comment byuser comment-author-oes_admin bypostauthor odd alt depth-2">
			<article id="div-comment-2401" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn"><a href='http://www.learnopengles.com' rel='external nofollow' class='url'>Admin</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2401">
							<time datetime="2014-11-12T18:37:59+00:00">
								November 12, 2014 at 6:37 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Probably, but it&#8217;s not something that I&#8217;ve looked into all that much. You might be able to find some resources &#038; answers on stackoverflow.com</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2401#respond' onclick='return addComment.moveForm( "div-comment-2401", "2401", "respond", "812" )' aria-label='Reply to Admin'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-2431" class="comment even thread-odd thread-alt depth-1">
			<article id="div-comment-2431" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://0.gravatar.com/avatar/3f53d811fbb5ea4437f2313c9054b422?s=42&#038;d=identicon&#038;r=g' srcset='http://0.gravatar.com/avatar/3f53d811fbb5ea4437f2313c9054b422?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Jonas</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2431">
							<time datetime="2015-01-08T17:41:50+00:00">
								January 8, 2015 at 5:41 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hey,<br />
I really love this tutorial and I successfully tried it. But now I&#8217;m using very complex models with thousands of faces. So I decided to take blender and export them as .obj&#8230; With the help of the library min3d I can parse these formats and it automatically make the model. I successfully added rotation but I cannot add the model to the Matrix&#8230; Could you help?<br />
Here is my Code:<br />
<code><br />
import android.opengl.Matrix;<br />
import android.os.Bundle;<br />
import android.util.DisplayMetrics;<br />
import android.view.MotionEvent;<br />
import android.view.ScaleGestureDetector;</p>
<p>import min3d.core.Object3dContainer;<br />
import min3d.core.RendererActivity;<br />
import min3d.parser.IParser;<br />
import min3d.parser.Parser;<br />
import min3d.vos.Light;</p>
<p>/**<br />
 * Created by Jonas on 11/21/2014.<br />
 */<br />
public class OpenGLResultActivityMin3D extends RendererActivity {<br />
    private Object3dContainer objModel;</p>
<p>    public float mDeltaX = 0.0f;<br />
    public float mDeltaY = 0.0f;<br />
    public float mDeltax = 0.0f;<br />
    public float mDeltay = 0.0f;<br />
    private float mPreviousX;<br />
    private float mPreviousY;<br />
    private float mSize = 1.0f;<br />
    private float mDensity;</p>
<p>    private ScaleGestureDetector SGD;</p>
<p>    public void onCreate(Bundle savedInstanceState) {<br />
        super.onCreate(savedInstanceState);<br />
        SGD = new ScaleGestureDetector(this,new ScaleListener());<br />
        final DisplayMetrics displayMetrics = new DisplayMetrics();<br />
        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);<br />
        mDensity = displayMetrics.density;<br />
    }</p>
<p>    @Override<br />
    public void initScene() {</p>
<p>        scene.lights().add(new Light());</p>
<p>        IParser parser = Parser.createParser(Parser.Type.OBJ, getResources(), "com.apgtigers.bookscann:raw/cubemash_obj", true);<br />
        parser.parse();</p>
<p>        objModel = parser.getParsedObject();<br />
        objModel.scale().x = objModel.scale().y = objModel.scale().z = mSize;<br />
        scene.addChild(objModel);<br />
        Matrix.setIdentityM(mAccumulatedRotation, 0);<br />
    }</p>
<p>    @Override<br />
    public void updateScene() {<br />
        objModel.rotation().y+=mDeltaX;<br />
        objModel.rotation().x+=mDeltaY;<br />
        mDeltaX = 0;<br />
        mDeltaY = 0;<br />
    }</p>
<p>    public boolean onTouchEvent(MotionEvent event){<br />
        SGD.onTouchEvent(event);<br />
        if (event != null)<br />
        {<br />
            float x = event.getX();<br />
            float y = event.getY();</p>
<p>            if (event.getAction() == MotionEvent.ACTION_MOVE)<br />
            {<br />
                float deltaX = (x - mPreviousX) / mDensity / 2f;<br />
                float deltaY = (y - mPreviousY) / mDensity / 2f;</p>
<p>                mDeltaX = deltaX;<br />
                mDeltaY = deltaY;<br />
            }</p>
<p>            mPreviousX = x;<br />
            mPreviousY = y;</p>
<p>            return true;<br />
        }<br />
        else<br />
        {<br />
            return super.onTouchEvent(event);<br />
        }<br />
    }</p>
<p>    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {<br />
        @Override<br />
        public boolean onScale(ScaleGestureDetector detector) {<br />
            float scale = detector.getScaleFactor();<br />
            mSize *= scale;<br />
            objModel.scale().x = objModel.scale().y = objModel.scale().z = mSize;<br />
            return true;<br />
        }<br />
    }<br />
}<br />
</code><br />
You could see, in the TouchEvent Function I also added a posibility to Zoom in. But everything what is important is:<br />
the <code> initScene(){...} </code> and <code> updateScene(){...} </code> funktion<br />
same as:<br />
the <code> onSurfaceCreated(){...} </code> and <code> onDrawFrame(){...} </code> funktion</p>
<p>Jonas</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2431#respond' onclick='return addComment.moveForm( "div-comment-2431", "2431", "respond", "812" )' aria-label='Reply to Jonas'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2622" class="comment odd alt thread-even depth-1">
			<article id="div-comment-2622" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://2.gravatar.com/avatar/295b39665aeb57755e31da0dbd4b7031?s=42&#038;d=identicon&#038;r=g' srcset='http://2.gravatar.com/avatar/295b39665aeb57755e31da0dbd4b7031?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Sunny</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2622">
							<time datetime="2016-06-14T17:58:22+00:00">
								June 14, 2016 at 5:58 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi, this is a really great method for rotating. Thank you so much for this tutorial. It&#8217;s working in my program but I have some problems while using it.<br />
1. My screen doesn&#8217;t show anything until I delete &#8220;Matrix.translateM(mModelMatrix, 0, 0.0f, 0.8f, -3.5f);&#8221;. Why?<br />
2. I still confuse about getting the pixel density. How can I write your code into my program? It seems can&#8217;t be implemented.</p>
<p>Thank you so much!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2622#respond' onclick='return addComment.moveForm( "div-comment-2622", "2622", "respond", "812" )' aria-label='Reply to Sunny'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2639" class="comment even thread-odd thread-alt depth-1">
			<article id="div-comment-2639" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/a7e8a0c41c27f08204bedc29051072b6?s=42&#038;d=identicon&#038;r=g' srcset='http://1.gravatar.com/avatar/a7e8a0c41c27f08204bedc29051072b6?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">Sam</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2639">
							<time datetime="2016-09-23T17:19:36+00:00">
								September 23, 2016 at 5:19 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi,<br />
So one behavior I&#8217;m seeing is that: with accumulated rotations, the cube becomes wonky and sort of tilts on it&#8217;s axis sideways and can only be straightened by turning it around, rotating it on another axis and turning it back around again. This does not happen with simple rotations (but that has it&#8217;s own glaring problem).<br />
How do I deal with this?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2639#respond' onclick='return addComment.moveForm( "div-comment-2639", "2639", "respond", "812" )' aria-label='Reply to Sam'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2640" class="comment odd alt thread-even depth-1">
			<article id="div-comment-2640" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/a7e8a0c41c27f08204bedc29051072b6?s=42&#038;d=identicon&#038;r=g' srcset='http://1.gravatar.com/avatar/a7e8a0c41c27f08204bedc29051072b6?s=84&amp;d=identicon&amp;r=g 2x' class='avatar avatar-42 photo' height='42' width='42' />						<b class="fn">NK</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/#comment-2640">
							<time datetime="2016-09-23T17:25:11+00:00">
								September 23, 2016 at 5:25 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>With the accumulated rotations, how would i limit the rotation on one of the axes? Say i only want to be able to tilt the cube up and down a certain degree but allow it rotate completely left and right. Since I only have an mDeltaY, I&#8217;m not sure how I would do this</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='http://www.learnopengles.com/rotating-an-object-with-touch-events/?replytocom=2640#respond' onclick='return addComment.moveForm( "div-comment-2640", "2640", "respond", "812" )' aria-label='Reply to NK'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		
	
	
		<div id="respond" class="comment-respond">
		<h2 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/rotating-an-object-with-touch-events/#respond" style="display:none;">Cancel reply</a></small></h2>			<form action="http://www.learnopengles.com/wordpress/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate>
				<p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p><p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required="required"></textarea></p><p style="clear: both;" class="subscribe-to-comments">
			<input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" />
			<label for="subscribe">Notify me of followup comments via e-mail</label>
			</p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='812' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p>
<noscript><input type="hidden" name="JS04X7" value="NS1" /></noscript>
<noscript><p><strong>Currently you have JavaScript disabled. In order to post comments, please make sure JavaScript and Cookies are enabled, and reload the page.</strong> <a href="http://enable-javascript.com/" rel="nofollow external" >Click here for instructions on how to enable JavaScript in your browser.</a></p></noscript>
			</form>
			</div><!-- #respond -->
	
</div><!-- .comments-area -->

	<nav class="navigation post-navigation" role="navigation">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="http://www.learnopengles.com/listening-to-android-touch-events-and-acting-on-them/" rel="prev"><span class="meta-nav" aria-hidden="true">Previous</span> <span class="screen-reader-text">Previous post:</span> <span class="post-title">Listening to Android Touch Events, and Acting on Them</span></a></div><div class="nav-next"><a href="http://www.learnopengles.com/android-lesson-seven-an-introduction-to-vertex-buffer-objects-vbos/" rel="next"><span class="meta-nav" aria-hidden="true">Next</span> <span class="screen-reader-text">Next post:</span> <span class="post-title">Android Lesson Seven: An Introduction to Vertex Buffer Objects (VBOs)</span></a></div></div>
	</nav>
	</main><!-- .site-main -->

	
</div><!-- .content-area -->


	<aside id="secondary" class="sidebar widget-area" role="complementary">
		<section id="search-2" class="widget widget_search">
<form role="search" method="get" class="search-form" action="http://www.learnopengles.com/">
	<label>
		<span class="screen-reader-text">Search for:</span>
		<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
	</label>
	<button type="submit" class="search-submit"><span class="screen-reader-text">Search</span></button>
</form>
</section>		<section id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widget-title">Recent Posts</h2>		<ul>
					<li>
				<a href="http://www.learnopengles.com/happy-new-year-2017-roundup-chip-8-rust-and-more/">Happy New Year 2017 Roundup &#8211; CHIP-8, Rust, and more</a>
						</li>
					<li>
				<a href="http://www.learnopengles.com/new-roundup-support-for-android-studio/">New Roundup + Support for Android Studio</a>
						</li>
					<li>
				<a href="http://www.learnopengles.com/learning-java-by-building-android-games-a-new-android-game-coding-books-for-beginners/">Learning Java by Building Android Games &#8212; a New Android Game Coding Books for Beginners</a>
						</li>
					<li>
				<a href="http://www.learnopengles.com/opengl-roundup-fall-edition/">OpenGL Roundup, Fall Edition</a>
						</li>
					<li>
				<a href="http://www.learnopengles.com/a-performance-comparison-redux-java-c-and-renderscript-on-the-nexus-5/">A performance comparison redux: Java, C, and Renderscript on the Nexus 5</a>
						</li>
				</ul>
		</section>		<section id="categories-3" class="widget widget_categories"><h2 class="widget-title">Categories</h2>		<ul>
	<li class="cat-item cat-item-172"><a href="http://www.learnopengles.com/category/air-hockey-project/" >Air Hockey Project</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://www.learnopengles.com/category/android/" >Android</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://www.learnopengles.com/category/android-tutorials/" >Android Tutorials</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.learnopengles.com/category/articles/" >Articles</a>
</li>
	<li class="cat-item cat-item-41"><a href="http://www.learnopengles.com/category/game-development/" >Game Development</a>
</li>
	<li class="cat-item cat-item-101"><a href="http://www.learnopengles.com/category/ios/" >iOS</a>
</li>
	<li class="cat-item cat-item-170"><a href="http://www.learnopengles.com/category/ios-tutorials/" >iOS Tutorials</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.learnopengles.com/category/miscellaneous/" >Miscellaneous</a>
</li>
	<li class="cat-item cat-item-173"><a href="http://www.learnopengles.com/category/native-development/" >Native Development</a>
</li>
	<li class="cat-item cat-item-76"><a href="http://www.learnopengles.com/category/roundups/" >Roundups</a>
</li>
	<li class="cat-item cat-item-33"><a href="http://www.learnopengles.com/category/webgl/" >WebGL</a>
</li>
	<li class="cat-item cat-item-40"><a href="http://www.learnopengles.com/category/webgl-tutorials/" >WebGL Tutorials</a>
</li>
		</ul>
</section><section id="nav_menu-4" class="widget widget_nav_menu"><h2 class="widget-title">Android Tutorials</h2><div class="menu-android-tutorials-container"><ul id="menu-android-tutorials" class="menu"><li id="menu-item-122" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-122"><a href="http://www.learnopengles.com/android-lesson-one-getting-started/">Lesson One: Getting Started</a></li>
<li id="menu-item-294" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-294"><a href="http://www.learnopengles.com/android-lesson-two-ambient-and-diffuse-lighting/">Lesson Two: Ambient and Diffuse Lighting</a></li>
<li id="menu-item-340" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-340"><a href="http://www.learnopengles.com/android-lesson-three-moving-to-per-fragment-lighting/">Lesson Three: Moving to Per-Fragment Lighting</a></li>
<li id="menu-item-605" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-605"><a href="http://www.learnopengles.com/android-lesson-four-introducing-basic-texturing/">Lesson Four: Introducing Basic Texturing</a></li>
<li id="menu-item-688" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-688"><a href="http://www.learnopengles.com/android-lesson-five-an-introduction-to-blending/">Lesson Five: An Introduction to Blending</a></li>
<li id="menu-item-809" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-809"><a href="http://www.learnopengles.com/android-lesson-six-an-introduction-to-texture-filtering/">Lesson Six: An Introduction to Texture Filtering</a></li>
<li id="menu-item-916" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-916"><a href="http://www.learnopengles.com/android-lesson-seven-an-introduction-to-vertex-buffer-objects-vbos/">Lesson Seven: An Introduction to Vertex Buffer Objects</a></li>
<li id="menu-item-1062" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-1062"><a href="http://www.learnopengles.com/android-lesson-eight-an-introduction-to-index-buffer-objects-ibos/">Lesson Eight: An Introduction to Index Buffer Objects</a></li>
</ul></div></section><section id="nav_menu-8" class="widget widget_nav_menu"><h2 class="widget-title">WebGL Tutorials</h2><div class="menu-webgl-tutorials-container"><ul id="menu-webgl-tutorials" class="menu"><li id="menu-item-473" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-473"><a href="http://www.learnopengles.com/webgl-lesson-one-getting-started/">Lesson One: Getting Started</a></li>
</ul></div></section><section id="nav_menu-6" class="widget widget_nav_menu"><h2 class="widget-title">Articles</h2><div class="menu-articles-container"><ul id="menu-articles" class="menu"><li id="menu-item-618" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-618"><a href="http://www.learnopengles.com/how-to-embed-webgl-into-a-wordpress-post/">How to Embed Webgl into a WordPress Post</a></li>
<li id="menu-item-808" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-808"><a href="http://www.learnopengles.com/listening-to-android-touch-events-and-acting-on-them/">Listening to Android Touch Events, and Acting on Them</a></li>
<li id="menu-item-859" class="menu-item menu-item-type-post_type menu-item-object-post current-menu-item menu-item-859"><a href="http://www.learnopengles.com/rotating-an-object-with-touch-events/">Rotating An Object With Touch Events</a></li>
<li id="menu-item-1206" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-1206"><a href="http://www.learnopengles.com/how-to-use-opengl-es-2-in-an-android-live-wallpaper/">How to Use OpenGL ES 2 in an Android Live Wallpaper</a></li>
<li id="menu-item-1260" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-1260"><a href="http://www.learnopengles.com/understanding-opengls-matrices/">Understanding OpenGL&#8217;s Matrices</a></li>
</ul></div></section><section id="nav_menu-9" class="widget widget_nav_menu"><h2 class="widget-title">Air Hockey Project</h2><div class="menu-air-hockey-project-container"><ul id="menu-air-hockey-project" class="menu"><li id="menu-item-2252" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2252"><a href="http://www.learnopengles.com/developing-a-simple-game-of-air-hockey-using-c-and-opengl-es-2-for-android-ios-and-the-web/">A Simple Game of Air Hockey Using C and OpenGL ES 2</a></li>
<li id="menu-item-2249" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2249"><a href="http://www.learnopengles.com/calling-opengl-from-android-using-the-ndk/">Calling OpenGL on Android via the NDK</a></li>
<li id="menu-item-2250" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2250"><a href="http://www.learnopengles.com/calling-opengl-from-c-on-ios-sharing-common-code-with-android/">Calling OpenGL on iOS, Sharing Common Code with Android</a></li>
<li id="menu-item-2251" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2251"><a href="http://www.learnopengles.com/calling-opengl-from-c-on-the-web-by-using-emscripten-sharing-common-code-with-android-and-ios/">Calling OpenGL on the web via Emscripten</a></li>
<li id="menu-item-2254" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2254"><a href="http://www.learnopengles.com/loading-a-png-into-memory-and-displaying-it-as-a-texture-with-opengl-es-2-using-almost-the-same-code-on-ios-android-and-emscripten/">Displaying a PNG as a Texture on Android</a></li>
<li id="menu-item-2256" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2256"><a href="http://www.learnopengles.com/loading-a-png-into-memory-and-displaying-it-as-a-texture-with-opengl-es-2-adding-support-for-ios/">Displaying a PNG as a Texture on iOS</a></li>
<li id="menu-item-2255" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2255"><a href="http://www.learnopengles.com/loading-a-png-into-memory-and-displaying-it-as-a-texture-with-opengl-es-2-adding-support-for-emscripten/">Displaying a PNG as a Texture on Emscripten</a></li>
<li id="menu-item-2257" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2257"><a href="http://www.learnopengles.com/adding-a-3d-perspective-and-object-rendering-to-our-air-hockey-project-in-native-c-code/">Adding a 3d Perspective</a></li>
<li id="menu-item-2253" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-2253"><a href="http://www.learnopengles.com/finishing-up-our-native-air-hockey-project-with-touch-events-and-basic-collision-detection/">Finishing Up With Touch Events and Basic Collision Detection</a></li>
</ul></div></section><section id="text-9" class="widget widget_text"><h2 class="widget-title">Get the Book</h2>			<div class="textwidget"><div align="center"><iframe border="0px" height="182px" seamless="true" scrolling="no" src="http://pragprog.com/products/buy_now_insert/kbogla" width="155px">
Buy Now
</iframe></div></div>
		</section><section id="text-7" class="widget widget_text"><h2 class="widget-title">Android Market App</h2>			<div class="textwidget"><div style="text-align:center;"><a href="https://market.android.com/details?id=com.learnopengles.android"  target="_blank"><img src="http://www.learnopengles.com/wordpress/wp-content/uploads/2011/05/market-qr-code.png" alt="QR code for link to the app on the Android Market." width="120" height="120" style="margin-left: auto;margin-right: auto;"></a></div><br>
<a href="https://market.android.com/details?id=com.learnopengles.android" target="_blank">Download the lessons and tutorials directly from the Android Market.</a></div>
		</section><section id="text-8" class="widget widget_text"><h2 class="widget-title">Get the Source Code</h2>			<div class="textwidget">Source code is available at the <a href="https://github.com/learnopengles/Learn-OpenGLES-Tutorials"  target="_blank">GitHub repository</a>.</div>
		</section><section id="linkcat-3" class="widget widget_links"><h2 class="widget-title">Reference Sites</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://developer.android.com/index.html" title="Google&#8217;s reference site for developing on Android." target="_blank">Android Developers</a></li>
<li><a href="http://www.opengl.org/" title="The industry&#8217;s foundation for high performance graphics." target="_blank">OpenGL</a></li>
<li><a href="http://www.khronos.org/" title="Open standards for media authoring and acceleration." target="_blank">The Khronos Group</a></li>

	</ul>
</section>
<section id="linkcat-5" class="widget widget_links"><h2 class="widget-title">Resources</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://android-developers.blogspot.com/" title="Google&#8217;s official developer&#8217;s blog, on everything Android." target="_blank">Android Developer&#039;s Blog</a></li>
<li><a href="http://www.dataorienteddesign.com/dodmain/dodmain.html">Data-Oriented Design</a></li>
<li><a href="http://gameprogrammingpatterns.com/index.html">Game Programming Patterns</a></li>
<li><a href="http://www.khronos.org/webgl/wiki/Main_Page" target="_blank">Khronos WebGL Public Wiki</a></li>
<li><a href="https://wiki.mozilla.org/Platform/GFX/MobileGPUs">Platform/GFX/MobileGPUs</a></li>

	</ul>
</section>
<section id="linkcat-2" class="widget widget_links"><h2 class="widget-title">Tutorials and Information</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://www.euclideanspace.com/" title="Learning math and physics to build a 3D world." target="_blank">Euclidean Space</a></li>
<li><a href="http://www.falloutsoftware.com/" title="OpenGL, DirectX, DirectDraw and 3D game programming tutorials." target="_blank">FalloutSoftware.com</a></li>
<li><a href="http://gamecodeschool.com" title="Game coding for beginners">Game Code School</a></li>
<li><a href="http://ghoshehsoft.wordpress.com/" title="OpenGL ES 2.0 topics for Android">Ghoshehsoft&#039;s Blog</a></li>
<li><a href="http://glprogramming.com/" title="Communal website for the OpenGL Help Network." target="_blank">GLProgramming</a></li>
<li><a href="http://mindprod.com/jgloss/jgloss.html" title="Canadian Mind Products Java &amp; Internet Glossary" target="_blank">Java glossary</a></li>
<li><a href="http://arcsynthesis.org/gltut/" title="A detailed online webbook on modern OpenGL programming, using shaders." target="_blank">Learning Modern 3D Graphics Programming</a></li>
<li><a href="http://learningwebgl.com/blog/" target="_blank">Learning WebGL</a></li>
<li><a href="http://nehe.gamedev.net/" title="OpenGL tutorials, demos, games and more." target="_blank">NeHe Productions</a></li>
<li><a href="https://en.wikibooks.org/wiki/OpenGL_Programming" target="_blank">OpenGL Programming WikiBook</a></li>
<li><a href="http://www.songho.ca/opengl/index.html" title="Fundamental OpenGL tutorials and notes." target="_blank">songho.ca OpenGL Tutorials</a></li>

	</ul>
</section>
<section id="pages-2" class="widget widget_pages"><h2 class="widget-title">Pages</h2>		<ul>
			<li class="page_item page-item-927"><a href="http://www.learnopengles.com/about/">About</a></li>
<li class="page_item page-item-5"><a href="http://www.learnopengles.com/contact/">Contact</a></li>
<li class="page_item page-item-27"><a href="http://www.learnopengles.com/privacy-policy/">Privacy Policy</a></li>
<li class="page_item page-item-720"><a href="http://www.learnopengles.com/terms-of-use/">Terms of Use</a></li>
		</ul>
		</section><section id="archives-2" class="widget widget_archive"><h2 class="widget-title">Archives</h2>		<ul>
			<li><a href='http://www.learnopengles.com/2017/01/'>January 2017</a></li>
	<li><a href='http://www.learnopengles.com/2016/08/'>August 2016</a></li>
	<li><a href='http://www.learnopengles.com/2015/06/'>June 2015</a></li>
	<li><a href='http://www.learnopengles.com/2014/10/'>October 2014</a></li>
	<li><a href='http://www.learnopengles.com/2014/07/'>July 2014</a></li>
	<li><a href='http://www.learnopengles.com/2014/04/'>April 2014</a></li>
	<li><a href='http://www.learnopengles.com/2013/11/'>November 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/10/'>October 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/09/'>September 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/07/'>July 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/06/'>June 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/05/'>May 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/04/'>April 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/02/'>February 2013</a></li>
	<li><a href='http://www.learnopengles.com/2013/01/'>January 2013</a></li>
	<li><a href='http://www.learnopengles.com/2012/10/'>October 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/08/'>August 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/07/'>July 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/06/'>June 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/05/'>May 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/04/'>April 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/03/'>March 2012</a></li>
	<li><a href='http://www.learnopengles.com/2012/02/'>February 2012</a></li>
	<li><a href='http://www.learnopengles.com/2011/12/'>December 2011</a></li>
	<li><a href='http://www.learnopengles.com/2011/10/'>October 2011</a></li>
	<li><a href='http://www.learnopengles.com/2011/09/'>September 2011</a></li>
	<li><a href='http://www.learnopengles.com/2011/07/'>July 2011</a></li>
	<li><a href='http://www.learnopengles.com/2011/06/'>June 2011</a></li>
	<li><a href='http://www.learnopengles.com/2011/05/'>May 2011</a></li>
		</ul>
		</section>	</aside><!-- .sidebar .widget-area -->

		</div><!-- .site-content -->

		<footer id="colophon" class="site-footer" role="contentinfo">
			
			
			<div class="site-info">
								<span class="site-title"><a href="http://www.learnopengles.com/" rel="home">Learn OpenGL ES</a></span>
				<a href="https://wordpress.org/">Proudly powered by WordPress</a>
			</div><!-- .site-info -->
		</footer><!-- .site-footer -->
	</div><!-- .site-inner -->
</div><!-- .site -->


<script type='text/javascript'>
/* <![CDATA[ */
r3f5x9JS=escape(document['referrer']);
hf4N='65e92fe45618436d6a3a4d9758e270c4';
hf4V='6ce49caad9d8ead569e8cc3ab63401b6';
cm4S="form[action='http://www.learnopengles.com/wordpress/wp-comments-post.php']";
jQuery(document).ready(function($){var e="#commentform, .comment-respond form, .comment-form, "+cm4S+", #lostpasswordform, #registerform, #loginform, #login_form, #wpss_contact_form";$(e).submit(function(){$("<input>").attr("type","hidden").attr("name","r3f5x9JS").attr("value",r3f5x9JS).appendTo(e);$("<input>").attr("type","hidden").attr("name",hf4N).attr("value",hf4V).appendTo(e);return true;});$("#comment").attr({minlength:"15",maxlength:"15360"})});
/* ]]> */
</script> 
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9b'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0.9b'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.learnopengles.com/wordpress/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.learnopengles.com/wordpress/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = 2;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/js/skip-link-focus-fix.js?ver=20160816'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-includes/js/comment-reply.min.js?ver=4.8.5'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var screenReaderText = {"expand":"expand child menu","collapse":"collapse child menu"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/themes/twentysixteen/js/functions.js?ver=20160816'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-content/plugins/wp-spamshield/js/jscripts-ftr-min.js'></script>
<script type='text/javascript' src='http://www.learnopengles.com/wordpress/wp-includes/js/wp-embed.min.js?ver=4.8.5'></script>
</body>
</html>

<!-- Dynamic page generated in 0.136 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2018-01-16 23:44:53 -->

<!-- Compression = gzip -->